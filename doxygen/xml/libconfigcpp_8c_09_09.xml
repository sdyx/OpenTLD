<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.1">
  <compounddef id="libconfigcpp_8c_09_09" kind="file">
    <compoundname>libconfigcpp.c++</compoundname>
    <includes refid="libconfig_8h_09_09" local="yes">libconfig.h++</includes>
    <includes refid="wincompat_8h" local="yes">wincompat.h</includes>
    <includes refid="libconfig_8h" local="yes">libconfig.h</includes>
    <includes local="no">cstring</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">sstream</includes>
    <includedby refid="libconfigcpp_8cc" local="yes">src/3rdparty/libconfig/libconfigcpp.cc</includedby>
    <incdepgraph>
      <node id="1228">
        <label>src/3rdparty/libconfig/libconfigcpp.c++</label>
        <link refid="libconfigcpp.c++"/>
        <childnode refid="1229" relation="include">
        </childnode>
        <childnode refid="1233" relation="include">
        </childnode>
        <childnode refid="1234" relation="include">
        </childnode>
        <childnode refid="1235" relation="include">
        </childnode>
        <childnode refid="1236" relation="include">
        </childnode>
        <childnode refid="1237" relation="include">
        </childnode>
      </node>
      <node id="1234">
        <label>libconfig.h</label>
        <link refid="libconfig_8h"/>
        <childnode refid="1230" relation="include">
        </childnode>
      </node>
      <node id="1233">
        <label>wincompat.h</label>
        <link refid="wincompat_8h"/>
      </node>
      <node id="1232">
        <label>string</label>
      </node>
      <node id="1231">
        <label>exception</label>
      </node>
      <node id="1229">
        <label>libconfig.h++</label>
        <link refid="libconfig_8h_09_09"/>
        <childnode refid="1230" relation="include">
        </childnode>
        <childnode refid="1231" relation="include">
        </childnode>
        <childnode refid="1232" relation="include">
        </childnode>
      </node>
      <node id="1237">
        <label>sstream</label>
      </node>
      <node id="1236">
        <label>cstdlib</label>
      </node>
      <node id="1230">
        <label>stdio.h</label>
      </node>
      <node id="1235">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1238">
        <label>src/3rdparty/libconfig/libconfigcpp.c++</label>
        <link refid="libconfigcpp.c++"/>
        <childnode refid="1239" relation="include">
        </childnode>
      </node>
      <node id="1239">
        <label>src/3rdparty/libconfig/libconfigcpp.cc</label>
        <link refid="libconfigcpp_8cc"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacelibconfig">libconfig</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="libconfigcpp_8c_09_09_1aac782925c90a12a08457aa1e9eec31bd" prot="public" static="no">
        <name>CONFIG_LOOKUP_NO_EXCEPTIONS</name>
        <param><defname>P</defname></param>
        <param><defname>T</defname></param>
        <param><defname>V</defname></param>
        <initializer>try                                           \
  {                                             \
    Setting &amp;s = lookup(P);                     \
    V = (T)s;                                   \
    return(true);                               \
  }                                             \
  catch(ConfigException)                        \
  {                                             \
    return(false);                              \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/horst/repos/opentld-sdyx/src/3rdparty/libconfig/libconfigcpp.c++" line="467" bodyfile="/home/horst/repos/opentld-sdyx/src/3rdparty/libconfig/libconfigcpp.c++" bodystart="445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libconfigcpp_8c_09_09_1abfd54db12d50ab5a5811407b035c743b" prot="public" static="no">
        <name>SETTING_LOOKUP_NO_EXCEPTIONS</name>
        <param><defname>K</defname></param>
        <param><defname>T</defname></param>
        <param><defname>V</defname></param>
        <initializer>try                                           \
  {                                             \
    Setting &amp;s = operator[](K);                 \
    V = (T)s;                                   \
    return(true);                               \
  }                                             \
  catch(ConfigException)                        \
  {                                             \
    return(false);                              \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/horst/repos/opentld-sdyx/src/3rdparty/libconfig/libconfigcpp.c++" line="874" bodyfile="/home/horst/repos/opentld-sdyx/src/3rdparty/libconfig/libconfigcpp.c++" bodystart="852" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/>libconfig<sp/>-<sp/>A<sp/>library<sp/>for<sp/>processing<sp/>structured<sp/>configuration<sp/>files</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2005-2010<sp/><sp/>Mark<sp/>A<sp/>Lindner</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>libconfig.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2.1<sp/>of</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>see</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libconfig_8h_09_09" kindref="compound">libconfig.h++</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(disable:<sp/>4996)</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wincompat_8h" kindref="compound">wincompat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libconfig_8h" kindref="compound">libconfig.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classlibconfig_1_1_parse_exception_1af4ca2a2b778b7b25e96620a816ac1122" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">libconfig<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="classlibconfig_1_1_parse_exception_1af4ca2a2b778b7b25e96620a816ac1122" kindref="member">ParseException::ParseException</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*error)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>:<sp/>_file(file<sp/>?<sp/>::strdup(file)<sp/>:<sp/><ref refid="_config_8cpp_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>),<sp/>_line(line),<sp/>_error(error)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44" refid="classlibconfig_1_1_parse_exception_1a5bf6aa3e7294e7d07bfd04b384fb4949" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><ref refid="classlibconfig_1_1_parse_exception_1af4ca2a2b778b7b25e96620a816ac1122" kindref="member">ParseException::ParseException</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_parse_exception" kindref="compound">ParseException</ref><sp/>&amp;other)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>:<sp/>_file(other._file<sp/>?<sp/>::strdup(other._file)<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>_line(other._line),</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>_error(other._error)</highlight></codeline>
<codeline lineno="51" refid="classlibconfig_1_1_parse_exception_1ab2f096f652382ceacd418c5d8104f0c5" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><ref refid="classlibconfig_1_1_parse_exception_1a5bf6aa3e7294e7d07bfd04b384fb4949" kindref="member">ParseException::~ParseException</ref>()<sp/>throw()</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>::free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)_file);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classlibconfig_1_1_parse_exception_1ab2f096f652382ceacd418c5d8104f0c5" kindref="member">ParseException::what</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw()</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;ParseException&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__toTypeCode(<ref refid="classlibconfig_1_1_setting_1a42f760ff88654e784477a6f040267bb4" kindref="member">Setting::Type</ref><sp/>type)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>typecode;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(type)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1a42f760ff88654e784477a6f040267bb4af14339fd50acc3f64d2e44d90441646a" kindref="member">Setting::TypeGroup</ref>:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typecode<sp/>=<sp/>CONFIG_TYPE_GROUP;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1a42f760ff88654e784477a6f040267bb4ad2396abcb4157de6581952ab02b8368c" kindref="member">Setting::TypeInt</ref>:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typecode<sp/>=<sp/>CONFIG_TYPE_INT;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1a42f760ff88654e784477a6f040267bb4a7be3a00b9ee4aff3c3f2a0685cc419fc" kindref="member">Setting::TypeInt64</ref>:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typecode<sp/>=<sp/>CONFIG_TYPE_INT64;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1a42f760ff88654e784477a6f040267bb4a5cc25d9b40d35e5d4bb914b7a65825f0" kindref="member">Setting::TypeFloat</ref>:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typecode<sp/>=<sp/>CONFIG_TYPE_FLOAT;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1a42f760ff88654e784477a6f040267bb4a2f4e6ed26f2abbecd870eaf6374fada4" kindref="member">Setting::TypeString</ref>:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typecode<sp/>=<sp/>CONFIG_TYPE_STRING;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1a42f760ff88654e784477a6f040267bb4a28893b07e0443ef1f2811c88a3641b5d" kindref="member">Setting::TypeBoolean</ref>:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typecode<sp/>=<sp/>CONFIG_TYPE_BOOL;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1a42f760ff88654e784477a6f040267bb4ad7254fcdecc9e0dd31c1e323a25788c6" kindref="member">Setting::TypeArray</ref>:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typecode<sp/>=<sp/>CONFIG_TYPE_ARRAY;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1a42f760ff88654e784477a6f040267bb4ae86a9b3605c8034c02ffad2ca1962813" kindref="member">Setting::TypeList</ref>:</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typecode<sp/>=<sp/>CONFIG_TYPE_LIST;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typecode<sp/>=<sp/>CONFIG_TYPE_NONE;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(typecode);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__constructPath(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Setting<sp/>&amp;setting,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>&amp;path)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>head<sp/>recursion<sp/>to<sp/>print<sp/>path<sp/>from<sp/>root<sp/>to<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<sp/>setting.isRoot())</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>__constructPath(setting.getParent(),<sp/>path);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(path.tellp()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="126" refid="classlibconfig_1_1_setting_exception_1a8e64e378f22317a3daa5824071c38e89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name<sp/>=<sp/>setting.getName();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(name)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>&lt;&lt;<sp/>name;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>setting.getIndex()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="classlibconfig_1_1_setting_exception_1a6ed0f32d95fe0730c8a10b2a12a12d7a" refkind="member"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><ref refid="classlibconfig_1_1_setting_exception_1a22ad32bab261aa1a6a17e4e1783240e4" kindref="member">SettingException::SettingException</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting" kindref="compound">Setting</ref><sp/>&amp;setting)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>sstr;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>__constructPath(setting,<sp/>sstr);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>_path<sp/>=<sp/>::strdup(sstr.str().c_str());</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="classlibconfig_1_1_setting_exception_1adfd98e2d09b2689884b9349968ea3477" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><ref refid="classlibconfig_1_1_setting_exception_1a22ad32bab261aa1a6a17e4e1783240e4" kindref="member">SettingException::SettingException</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting" kindref="compound">Setting</ref><sp/>&amp;setting,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>sstr;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>__constructPath(setting,<sp/>sstr);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>sstr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>idx<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>_path<sp/>=<sp/>::strdup(sstr.str().c_str());</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="classlibconfig_1_1_setting_exception_1a9e695af9dc4098bed2091f2753b79cf1" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><ref refid="classlibconfig_1_1_setting_exception_1a22ad32bab261aa1a6a17e4e1783240e4" kindref="member">SettingException::SettingException</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting" kindref="compound">Setting</ref><sp/>&amp;setting,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>sstr;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>__constructPath(setting,<sp/>sstr);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>sstr<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classlibconfig_1_1_setting_exception_1a3aa229dde3459dbd18d9598f8d1bede4" refkind="member"><highlight class="normal"><sp/><sp/>_path<sp/>=<sp/>::strdup(sstr.str().c_str());</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><ref refid="classlibconfig_1_1_setting_exception_1a22ad32bab261aa1a6a17e4e1783240e4" kindref="member">SettingException::SettingException</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172" refid="classlibconfig_1_1_setting_exception_1a22ad32bab261aa1a6a17e4e1783240e4" refkind="member"><highlight class="normal"><sp/><sp/>_path<sp/>=<sp/>::strdup(path);</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classlibconfig_1_1_setting_exception_1a3aa229dde3459dbd18d9598f8d1bede4" kindref="member">SettingException::getPath</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="178"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="179" refid="classlibconfig_1_1_setting_exception_1aec6caeb252c238bde272e5050c6b881f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(_path);</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><ref refid="classlibconfig_1_1_setting_exception_1a22ad32bab261aa1a6a17e4e1783240e4" kindref="member">SettingException::SettingException</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_exception" kindref="compound">SettingException</ref><sp/>&amp;other)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>_path<sp/>=<sp/>::strdup(other._path);</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="classlibconfig_1_1_setting_exception_1aead416e6b1f46683804fff8f4649df05" refkind="member"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><ref refid="classlibconfig_1_1_setting_exception" kindref="compound">SettingException</ref><sp/>&amp;<ref refid="classlibconfig_1_1_setting_exception_1aec6caeb252c238bde272e5050c6b881f" kindref="member">SettingException::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_exception" kindref="compound">SettingException</ref><sp/>&amp;other)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>::free(_path);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>_path<sp/>=<sp/>::strdup(other._path);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="classlibconfig_1_1_setting_exception_1a430c62b735c729be8b1478dae91b59cd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classlibconfig_1_1_setting_exception_1aead416e6b1f46683804fff8f4649df05" kindref="member">SettingException::what</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw()</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;SettingException&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><ref refid="classlibconfig_1_1_setting_exception_1a430c62b735c729be8b1478dae91b59cd" kindref="member">SettingException::~SettingException</ref>()<sp/>throw()</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>::free(_path);</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal">SettingTypeException::SettingTypeException(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Setting<sp/>&amp;setting)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>:<sp/>SettingException(setting)</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal">SettingTypeException::SettingTypeException(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Setting<sp/>&amp;setting,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>:<sp/>SettingException(setting,<sp/>idx)</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225" refid="classlibconfig_1_1_setting_type_exception_1a50c015f8011c3ffa3dce6a4a25072ec7" refkind="member"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal">SettingTypeException::SettingTypeException(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting" kindref="compound">Setting</ref><sp/>&amp;setting,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classlibconfig_1_1_setting_exception" kindref="compound">SettingException</ref>(setting,<sp/>name)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classlibconfig_1_1_setting_type_exception_1a50c015f8011c3ffa3dce6a4a25072ec7" kindref="member">SettingTypeException::what</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw()</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;SettingTypeException&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">SettingNotFoundException::SettingNotFoundException(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Setting<sp/>&amp;setting,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>:<sp/>SettingException(setting,<sp/>idx)</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">SettingNotFoundException::SettingNotFoundException(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Setting<sp/>&amp;setting,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>:<sp/>SettingException(setting,<sp/>name)</highlight></codeline>
<codeline lineno="255" refid="classlibconfig_1_1_setting_not_found_exception_1a10ddbf9dfba0e1d43e84ad9f746f4dc3" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal">SettingNotFoundException::SettingNotFoundException(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classlibconfig_1_1_setting_exception" kindref="compound">SettingException</ref>(path)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classlibconfig_1_1_setting_not_found_exception_1a10ddbf9dfba0e1d43e84ad9f746f4dc3" kindref="member">SettingNotFoundException::what</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw()</highlight></codeline>
<codeline lineno="268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;SettingNotFoundException&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270" refid="classlibconfig_1_1_setting_name_exception_1a6a65369f3eb5c02ee92fc71a31c99ebc" refkind="member"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal">SettingNameException::SettingNameException(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting" kindref="compound">Setting</ref><sp/>&amp;setting,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classlibconfig_1_1_setting_exception" kindref="compound">SettingException</ref>(setting,<sp/>name)</highlight></codeline>
<codeline lineno="277" refid="classlibconfig_1_1_file_i_o_exception_1a84b70cf651b243d10ecaf16fadea22a3" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classlibconfig_1_1_setting_name_exception_1a6a65369f3eb5c02ee92fc71a31c99ebc" kindref="member">SettingNameException::what</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw()</highlight></codeline>
<codeline lineno="283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;SettingNameException&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classlibconfig_1_1_file_i_o_exception_1a84b70cf651b243d10ecaf16fadea22a3" kindref="member">FileIOException::what</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw()</highlight></codeline>
<codeline lineno="290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="291" refid="classlibconfig_1_1_config_1ae4e8fa08259da2a1a222e9d04eb42fb1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;FileIOException&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config::ConfigDestructor(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg)</highlight></codeline>
<codeline lineno="297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="classlibconfig_1_1_setting" kindref="compound">Setting</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(arg);</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="classlibconfig_1_1_config_1a5d94e935833746061f33d58261365f55" refkind="member"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><ref refid="classlibconfig_1_1_config_1ae4e8fa08259da2a1a222e9d04eb42fb1" kindref="member">Config::Config</ref>()</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>:<sp/>_defaultFormat(<ref refid="classlibconfig_1_1_setting" kindref="compound">Setting</ref>::FormatDefault)</highlight></codeline>
<codeline lineno="305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>_config<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structconfig__t" kindref="compound">config_t</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><ref refid="libconfig_8c_1af8f0d0a9416fadc92a39cb3703c3c642" kindref="member">config_init</ref>(_config);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><ref refid="libconfig_8c_1a280861e940c38916d08df6ef5f3020a2" kindref="member">config_set_destructor</ref>(_config,<sp/>ConfigDestructor);</highlight></codeline>
<codeline lineno="309" refid="classlibconfig_1_1_config_1aa021f72ce9742f27bf7b5d62c9cb57b5" refkind="member"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><ref refid="classlibconfig_1_1_config_1a5d94e935833746061f33d58261365f55" kindref="member">Config::~Config</ref>()</highlight></codeline>
<codeline lineno="314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><ref refid="libconfig_8c_1af1e5aef47dd0b16193fec0d67e2be87e" kindref="member">config_destroy</ref>(_config);</highlight></codeline>
<codeline lineno="316" refid="classlibconfig_1_1_config_1a4986e712dd553c3b9f511a98ada42817" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>_config;</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_config_1aa021f72ce9742f27bf7b5d62c9cb57b5" kindref="member">Config::setAutoConvert</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flag)</highlight></codeline>
<codeline lineno="322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="323" refid="classlibconfig_1_1_config_1ad821267b5bd7e4642040a5fe234dcf15" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="libconfig_8c_1a1d7268ab90fd96df14c7235bd6193c69" kindref="member">config_set_auto_convert</ref>(_config,<sp/>(flag<sp/>?<sp/><ref refid="libconfig_8h_1a57b5d79188243e7d220cf1e68679d515" kindref="member">CONFIG_TRUE</ref><sp/>:<sp/><ref refid="libconfig_8h_1a9819a09c6be8abe989b30f365fe7c39c" kindref="member">CONFIG_FALSE</ref>));</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_config_1a4986e712dd553c3b9f511a98ada42817" kindref="member">Config::getAutoConvert</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="329"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="libconfig_8c_1a1bddad7478d8e5a86d264de580c051c9" kindref="member">config_get_auto_convert</ref>(_config)<sp/>!=<sp/><ref refid="libconfig_8h_1a9819a09c6be8abe989b30f365fe7c39c" kindref="member">CONFIG_FALSE</ref>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="classlibconfig_1_1_config_1aefc250cedb4d03740e43e734913a05ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_config_1ad821267b5bd7e4642040a5fe234dcf15" kindref="member">Config::setDefaultFormat</ref>(<ref refid="classlibconfig_1_1_setting_1a35034c3fd8c1b2e8e590b6f53083106e" kindref="member">Setting::Format</ref><sp/>format)</highlight></codeline>
<codeline lineno="336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(format<sp/>==<sp/><ref refid="classlibconfig_1_1_setting_1a35034c3fd8c1b2e8e590b6f53083106ea14a4aa723839cc4c033b93802cfa1a3c" kindref="member">Setting::FormatHex</ref>)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>_defaultFormat<sp/>=<sp/>Setting::FormatHex;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>_defaultFormat<sp/>=<sp/>Setting::FormatDefault;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="classlibconfig_1_1_config_1a49af806089ff70317745e660ac1d5ad4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="libconfig_8h_1a2f68d423d0bb0c313e0436f396fefeae" kindref="member">config_set_default_format</ref>(_config,<sp/>static_cast&lt;short&gt;(_defaultFormat));</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_config_1aefc250cedb4d03740e43e734913a05ee" kindref="member">Config::setTabWidth</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>width)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="349" refid="classlibconfig_1_1_config_1aa5a069b2d79157f53fde553295ffff37" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="libconfig_8h_1ae8fdf2f3c2a4632911f1baf77555420c" kindref="member">config_set_tab_width</ref>(_config,<sp/>width);</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_config_1a49af806089ff70317745e660ac1d5ad4" kindref="member">Config::getTabWidth</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw()</highlight></codeline>
<codeline lineno="355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="356" refid="classlibconfig_1_1_config_1ae4b7acff869245197eed53f800f3fe4f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="libconfig_8h_1addc8ab9b3e52ca25495a3c3cf6576501" kindref="member">config_get_tab_width</ref>(_config));</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_config_1aa5a069b2d79157f53fde553295ffff37" kindref="member">Config::setIncludeDir</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*includeDir)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><ref refid="libconfig_8c_1a293fc1b5c3a533d51c4cacecf69d9849" kindref="member">config_set_include_dir</ref>(_config,<sp/>includeDir);</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classlibconfig_1_1_config_1ae4b7acff869245197eed53f800f3fe4f" kindref="member">Config::getIncludeDir</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw()</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="libconfig_8h_1ad747286858e521f3e61bb326a38da267" kindref="member">config_get_include_dir</ref>(_config));</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config::handleError()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="376"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="libconfig_8h_1a7a2817f6ee55792eccb269138ceab7b5" kindref="member">config_error_type</ref>(_config))</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libconfig_8h_1aa2ee0cc0ed9667955b6c3e93b8577339ae124b071c8ae075b2c263331ab6b1ac1" kindref="member">CONFIG_ERR_NONE</ref>:</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libconfig_8h_1aa2ee0cc0ed9667955b6c3e93b8577339ac8a59a1b7b56a4eb1bbd961c96d3a31c" kindref="member">CONFIG_ERR_PARSE</ref>:</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>ParseException(<ref refid="libconfig_8h_1afa6fd5377d0bf3ec59c53bb59b347445" kindref="member">config_error_file</ref>(_config),</highlight></codeline>
<codeline lineno="384" refid="classlibconfig_1_1_config_1a468e6ef4c2e36bdd57fc23708dee69a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libconfig_8h_1a76d7d1fcd7e07dcfa00f6fe4ca0d1b63" kindref="member">config_error_line</ref>(_config),</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libconfig_8h_1af49c152fe5f4c5049cb99e5dc74d6e26" kindref="member">config_error_text</ref>(_config));</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libconfig_8h_1aa2ee0cc0ed9667955b6c3e93b8577339afa8304bf3565a6d1b679bee268fcecc9" kindref="member">CONFIG_ERR_FILE_IO</ref>:</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_file_i_o_exception" kindref="compound">FileIOException</ref>();</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="392" refid="classlibconfig_1_1_config_1af3076c6839fa256bef1ad3fc33e17f98" refkind="member"><highlight class="normal">}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_config_1a468e6ef4c2e36bdd57fc23708dee69a1" kindref="member">Config::read</ref>(FILE<sp/>*stream)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(<ref refid="classlibconfig_1_1_parse_exception" kindref="compound">ParseException</ref>)</highlight></codeline>
<codeline lineno="397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<sp/><ref refid="libconfig_8c_1ae4ab68a2e05878af9065bc3f325feac0" kindref="member">config_read</ref>(_config,<sp/>stream))</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>handleError();</highlight></codeline>
<codeline lineno="400" refid="classlibconfig_1_1_config_1a015b1433153ab1a8c5bb05b4bb96dc46" refkind="member"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_config_1af3076c6839fa256bef1ad3fc33e17f98" kindref="member">Config::readString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(<ref refid="classlibconfig_1_1_parse_exception" kindref="compound">ParseException</ref>)</highlight></codeline>
<codeline lineno="405"><highlight class="normal">{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<sp/><ref refid="libconfig_8c_1ac6224b9d31bc34745a8a57a99b954b1f" kindref="member">config_read_string</ref>(_config,<sp/>str))</highlight></codeline>
<codeline lineno="407" refid="classlibconfig_1_1_config_1a31bc78ca36d4081560de025cbb08c022" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>handleError();</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_config_1a015b1433153ab1a8c5bb05b4bb96dc46" kindref="member">Config::write</ref>(FILE<sp/>*stream)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="413"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><ref refid="libconfig_8c_1ade4a6d8cd3b6df32c30ddf8ee4feb04a" kindref="member">config_write</ref>(_config,<sp/>stream);</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416" refid="classlibconfig_1_1_config_1a9ee45e1ab444c2865bf076fbf4219326" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_config_1a31bc78ca36d4081560de025cbb08c022" kindref="member">Config::readFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(<ref refid="classlibconfig_1_1_file_i_o_exception" kindref="compound">FileIOException</ref>,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibconfig_1_1_parse_exception" kindref="compound">ParseException</ref>)</highlight></codeline>
<codeline lineno="421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<sp/><ref refid="libconfig_8c_1ab917f502ada6094c4e37e0255b073970" kindref="member">config_read_file</ref>(_config,<sp/>filename))</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>handleError();</highlight></codeline>
<codeline lineno="424" refid="classlibconfig_1_1_config_1adcfc1c6a6c7e43e5ac79d1e534fa0744" refkind="member"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_config_1a9ee45e1ab444c2865bf076fbf4219326" kindref="member">Config::writeFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(<ref refid="classlibconfig_1_1_file_i_o_exception" kindref="compound">FileIOException</ref>)</highlight></codeline>
<codeline lineno="429"><highlight class="normal">{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<sp/><ref refid="libconfig_8c_1adfbb6c3f9658d6c1acef8f10c3cc275c" kindref="member">config_write_file</ref>(_config,<sp/>filename))</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>handleError();</highlight></codeline>
<codeline lineno="432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436" refid="classlibconfig_1_1_config_1a548166ff5b36227a295489a86c5024c8" refkind="member"><highlight class="normal"><ref refid="classlibconfig_1_1_setting" kindref="compound">Setting</ref><sp/>&amp;<sp/><ref refid="classlibconfig_1_1_config_1a0e7f37e3f8a08f35a77778de99515c6e" kindref="member">Config::lookup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(<ref refid="classlibconfig_1_1_setting_not_found_exception" kindref="compound">SettingNotFoundException</ref>)</highlight></codeline>
<codeline lineno="438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><ref refid="structconfig__setting__t" kindref="compound">config_setting_t</ref><sp/>*s<sp/>=<sp/><ref refid="libconfig_8c_1ad5a5c51a4df796b9875fcab458aded96" kindref="member">config_lookup</ref>(_config,<sp/>path);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<sp/>s)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_not_found_exception" kindref="compound">SettingNotFoundException</ref>(path);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(Setting::wrapSetting(s));</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445" refid="libconfigcpp_8c_09_09_1aac782925c90a12a08457aa1e9eec31bd" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_config_1a1fa3eb517f8a6722b170322b5abdad15" kindref="member">Config::exists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><ref refid="structconfig__setting__t" kindref="compound">config_setting_t</ref><sp/>*s<sp/>=<sp/><ref refid="libconfig_8c_1ad5a5c51a4df796b9875fcab458aded96" kindref="member">config_lookup</ref>(_config,<sp/>path);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(s<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONFIG_LOOKUP_NO_EXCEPTIONS(P,<sp/>T,<sp/>V)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="458"><highlight class="preprocessor"><sp/><sp/>try<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="459" refid="classlibconfig_1_1_config_1abbf777fd9ef13502f049c3cbd8e1742e" refkind="member"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="460"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Setting<sp/>&amp;s<sp/>=<sp/>lookup(P);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="461"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>V<sp/>=<sp/>(T)s;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="462"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return(true);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="463"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="464"><highlight class="preprocessor"><sp/><sp/>catch(ConfigException)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="465"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="466" refid="classlibconfig_1_1_config_1ae82a77068c32d45ac0a006343f6cbec8" refkind="member"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return(false);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="467"><highlight class="preprocessor"><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_config_1abbf777fd9ef13502f049c3cbd8e1742e" kindref="member">Config::lookupValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="472"><highlight class="normal">{</highlight></codeline>
<codeline lineno="473" refid="classlibconfig_1_1_config_1a1021af7dfe97eb838d9a9892bd5b8339" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="libconfigcpp_8c_09_09_1aac782925c90a12a08457aa1e9eec31bd" kindref="member">CONFIG_LOOKUP_NO_EXCEPTIONS</ref>(path,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_config_1abbf777fd9ef13502f049c3cbd8e1742e" kindref="member">Config::lookupValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="479"><highlight class="normal">{</highlight></codeline>
<codeline lineno="480" refid="classlibconfig_1_1_config_1a50124b872c6412045dca2c89a4a71cca" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="libconfigcpp_8c_09_09_1aac782925c90a12a08457aa1e9eec31bd" kindref="member">CONFIG_LOOKUP_NO_EXCEPTIONS</ref>(path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_config_1abbf777fd9ef13502f049c3cbd8e1742e" kindref="member">Config::lookupValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="487" refid="classlibconfig_1_1_config_1a9b6cda1b3a631f7f9c912405f96a3601" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="libconfigcpp_8c_09_09_1aac782925c90a12a08457aa1e9eec31bd" kindref="member">CONFIG_LOOKUP_NO_EXCEPTIONS</ref>(path,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_config_1abbf777fd9ef13502f049c3cbd8e1742e" kindref="member">Config::lookupValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="493"><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><ref refid="libconfigcpp_8c_09_09_1aac782925c90a12a08457aa1e9eec31bd" kindref="member">CONFIG_LOOKUP_NO_EXCEPTIONS</ref>(path,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="495" refid="classlibconfig_1_1_config_1ac1d8313aba68010ec75a52e1f19cdd90" refkind="member"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_config_1abbf777fd9ef13502f049c3cbd8e1742e" kindref="member">Config::lookupValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;value)</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="502" refid="classlibconfig_1_1_config_1a493217a12b64307ed2917c7ea286e24e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="libconfigcpp_8c_09_09_1aac782925c90a12a08457aa1e9eec31bd" kindref="member">CONFIG_LOOKUP_NO_EXCEPTIONS</ref>(path,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_config_1abbf777fd9ef13502f049c3cbd8e1742e" kindref="member">Config::lookupValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="509" refid="classlibconfig_1_1_config_1a0934a631059747bd570ced12f9d19ba7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="libconfigcpp_8c_09_09_1aac782925c90a12a08457aa1e9eec31bd" kindref="member">CONFIG_LOOKUP_NO_EXCEPTIONS</ref>(path,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_config_1abbf777fd9ef13502f049c3cbd8e1742e" kindref="member">Config::lookupValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="515"><highlight class="normal">{</highlight></codeline>
<codeline lineno="516" refid="classlibconfig_1_1_config_1a09f19c13ff6e85b86479e43b3d269e36" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="libconfigcpp_8c_09_09_1aac782925c90a12a08457aa1e9eec31bd" kindref="member">CONFIG_LOOKUP_NO_EXCEPTIONS</ref>(path,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_config_1abbf777fd9ef13502f049c3cbd8e1742e" kindref="member">Config::lookupValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*&amp;value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="523" refid="classlibconfig_1_1_config_1a10e517e0d174ce21141b9d24b1b2c5db" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="libconfigcpp_8c_09_09_1aac782925c90a12a08457aa1e9eec31bd" kindref="member">CONFIG_LOOKUP_NO_EXCEPTIONS</ref>(path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>value);</highlight></codeline>
<codeline lineno="524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_config_1abbf777fd9ef13502f049c3cbd8e1742e" kindref="member">Config::lookupValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/>std::string<sp/>&amp;value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><ref refid="libconfigcpp_8c_09_09_1aac782925c90a12a08457aa1e9eec31bd" kindref="member">CONFIG_LOOKUP_NO_EXCEPTIONS</ref>(path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>value);</highlight></codeline>
<codeline lineno="531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal">Setting<sp/>&amp;<sp/><ref refid="classlibconfig_1_1_config_1a10e517e0d174ce21141b9d24b1b2c5db" kindref="member">Config::getRoot</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="536"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(Setting::wrapSetting(<ref refid="libconfig_8h_1a9a09c7c6caac32ef53cad966e5439906" kindref="member">config_root_setting</ref>(_config)));</highlight></codeline>
<codeline lineno="538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal">Setting::Setting(<ref refid="structconfig__setting__t" kindref="compound">config_setting_t</ref><sp/>*setting)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>:<sp/>_setting(setting)</highlight></codeline>
<codeline lineno="544"><highlight class="normal">{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="libconfig_8h_1ab0539e1029b2403f763210f6d4f92ca7" kindref="member">config_setting_type</ref>(setting))</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libconfig_8h_1a864a180eb6b1037e0a99963ce3396205" kindref="member">CONFIG_TYPE_GROUP</ref>:</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_type<sp/>=<sp/>TypeGroup;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libconfig_8h_1a1b85ab307a1ff7df72a283592bc9126f" kindref="member">CONFIG_TYPE_INT</ref>:</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_type<sp/>=<sp/>TypeInt;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libconfig_8h_1ab27e66c1a690422bf5a31fc054434765" kindref="member">CONFIG_TYPE_INT64</ref>:</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_type<sp/>=<sp/>TypeInt64;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libconfig_8h_1ae079db8dfb9bea8f4162a4c88e29157e" kindref="member">CONFIG_TYPE_FLOAT</ref>:</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_type<sp/>=<sp/>TypeFloat;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libconfig_8h_1a12837182b7370012eaf838cf98570249" kindref="member">CONFIG_TYPE_STRING</ref>:</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_type<sp/>=<sp/>TypeString;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libconfig_8h_1a91b82aea78661988429b035f116887b0" kindref="member">CONFIG_TYPE_BOOL</ref>:</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_type<sp/>=<sp/>TypeBoolean;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libconfig_8h_1a3709531ea3123627a7f1f5131efdb102" kindref="member">CONFIG_TYPE_ARRAY</ref>:</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_type<sp/>=<sp/>TypeArray;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libconfig_8h_1a1926c451e695309907e40c8800774e38" kindref="member">CONFIG_TYPE_LIST</ref>:</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_type<sp/>=<sp/>TypeList;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libconfig_8h_1ab339b4487df7c8e85a40c4755b3db1ae" kindref="member">CONFIG_TYPE_NONE</ref>:</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_type<sp/>=<sp/>TypeNone;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="libconfig_8c_1aca888b8fdb696c88bce979a93636ea4b" kindref="member">config_setting_get_format</ref>(setting))</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libconfig_8h_1aa23ea29a09c9675a19ba691dadf712cd" kindref="member">CONFIG_FORMAT_HEX</ref>:</highlight></codeline>
<codeline lineno="588" refid="classlibconfig_1_1_setting_1a0bbd671a6c8581a6cb1dc1ade1459ba2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_format<sp/>=<sp/>FormatHex;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libconfig_8h_1a6e4a933ac005b23571d68d1630a8ffa8" kindref="member">CONFIG_FORMAT_DEFAULT</ref>:</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_format<sp/>=<sp/>FormatDefault;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="595" refid="classlibconfig_1_1_setting_1aa3d550a5658d40655113497a17c9d282" refkind="member"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><ref refid="classlibconfig_1_1_setting_1a0bbd671a6c8581a6cb1dc1ade1459ba2" kindref="member">Setting::~Setting</ref>()<sp/>throw()</highlight></codeline>
<codeline lineno="601"><highlight class="normal">{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>_setting<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1aa3d550a5658d40655113497a17c9d282" kindref="member">Setting::setFormat</ref>(Format<sp/>format)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="608"><highlight class="normal">{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((_type<sp/>==<sp/>TypeInt)<sp/>||<sp/>(_type<sp/>==<sp/>TypeInt64))</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(format<sp/>==<sp/>FormatHex)</highlight></codeline>
<codeline lineno="612" refid="classlibconfig_1_1_setting_1ad8adda53b1f1021da61d00e27637a88f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_format<sp/>=<sp/>FormatHex;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_format<sp/>=<sp/>FormatDefault;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>_format<sp/>=<sp/>FormatDefault;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><ref refid="libconfig_8c_1a8d98395218294aa546f4befba4341f9c" kindref="member">config_setting_set_format</ref>(_setting,<sp/>static_cast&lt;short&gt;(_format));</highlight></codeline>
<codeline lineno="620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="621" refid="classlibconfig_1_1_setting_1abc59b9a6df51024d52970f0ee10d4f1f" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><ref refid="classlibconfig_1_1_setting_1ad8adda53b1f1021da61d00e27637a88f" kindref="member">Setting::operator bool</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw(<ref refid="classlibconfig_1_1_setting_type_exception" kindref="compound">SettingTypeException</ref>)<sp/></highlight></codeline>
<codeline lineno="625"><highlight class="normal">{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>assertType(<ref refid="classlibconfig_1_1_setting_1a42f760ff88654e784477a6f040267bb4a28893b07e0443ef1f2811c88a3641b5d" kindref="member">TypeBoolean</ref>);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="libconfig_8c_1aba91fe7f51bde31df0f037dfdf243fe8" kindref="member">config_setting_get_bool</ref>(_setting)<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="629"><highlight class="normal">}</highlight></codeline>
<codeline lineno="630" refid="classlibconfig_1_1_setting_1a9cc112e6bfab4902355fafe9ae8babac" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><ref refid="classlibconfig_1_1_setting_1abc59b9a6df51024d52970f0ee10d4f1f" kindref="member">Setting::operator int</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw(<ref refid="classlibconfig_1_1_setting_type_exception" kindref="compound">SettingTypeException</ref>)</highlight></codeline>
<codeline lineno="634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>assertType(<ref refid="classlibconfig_1_1_setting_1a42f760ff88654e784477a6f040267bb4ad2396abcb4157de6581952ab02b8368c" kindref="member">TypeInt</ref>);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="libconfig_8c_1a5b01f3c596436c849e27d5ce1b98c023" kindref="member">config_setting_get_int</ref>(_setting));</highlight></codeline>
<codeline lineno="638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><ref refid="classlibconfig_1_1_setting_1a9cc112e6bfab4902355fafe9ae8babac" kindref="member">Setting::operator unsigned int</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw(<ref refid="classlibconfig_1_1_setting_type_exception" kindref="compound">SettingTypeException</ref>)</highlight></codeline>
<codeline lineno="643"><highlight class="normal">{</highlight></codeline>
<codeline lineno="644" refid="classlibconfig_1_1_setting_1a0ac82df2307935191fed61ea2430bed4" refkind="member"><highlight class="normal"><sp/><sp/>assertType(<ref refid="classlibconfig_1_1_setting_1a42f760ff88654e784477a6f040267bb4ad2396abcb4157de6581952ab02b8368c" kindref="member">TypeInt</ref>);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v<sp/>=<sp/><ref refid="libconfig_8c_1a5b01f3c596436c849e27d5ce1b98c023" kindref="member">config_setting_get_int</ref>(_setting);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(static_cast&lt;unsigned<sp/>int&gt;(v));</highlight></codeline>
<codeline lineno="652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654" refid="classlibconfig_1_1_setting_1a0d6a7a8f1443d918478b9096590fe5ec" refkind="member"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><ref refid="classlibconfig_1_1_setting_1a0ac82df2307935191fed61ea2430bed4" kindref="member">Setting::operator long</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw(SettingTypeException)</highlight></codeline>
<codeline lineno="657"><highlight class="normal">{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1abd5bac17fa972df2d4b909594325134f" kindref="member">operator long long</ref>();</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1abc59b9a6df51024d52970f0ee10d4f1f" kindref="member">operator int</ref>();</highlight></codeline>
<codeline lineno="662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664" refid="classlibconfig_1_1_setting_1abd5bac17fa972df2d4b909594325134f" refkind="member"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><ref refid="classlibconfig_1_1_setting_1a0d6a7a8f1443d918478b9096590fe5ec" kindref="member">Setting::operator unsigned long</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw(SettingTypeException)</highlight></codeline>
<codeline lineno="667"><highlight class="normal">{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1a4a297e1c19d6d37d0ba067ba892d86ea" kindref="member">operator unsigned long long</ref>();</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1a9cc112e6bfab4902355fafe9ae8babac" kindref="member">operator unsigned int</ref>();</highlight></codeline>
<codeline lineno="672"><highlight class="normal">}</highlight></codeline>
<codeline lineno="673" refid="classlibconfig_1_1_setting_1a4a297e1c19d6d37d0ba067ba892d86ea" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><ref refid="classlibconfig_1_1_setting_1abd5bac17fa972df2d4b909594325134f" kindref="member">Setting::operator long long</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw(SettingTypeException)</highlight></codeline>
<codeline lineno="677"><highlight class="normal">{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>assertType(<ref refid="classlibconfig_1_1_setting_1a42f760ff88654e784477a6f040267bb4a7be3a00b9ee4aff3c3f2a0685cc419fc" kindref="member">TypeInt64</ref>);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="libconfig_8c_1a7844f2e4563e56bcd4fd6da10d6f2f9b" kindref="member">config_setting_get_int64</ref>(_setting));</highlight></codeline>
<codeline lineno="681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><ref refid="classlibconfig_1_1_setting_1a4a297e1c19d6d37d0ba067ba892d86ea" kindref="member">Setting::operator unsigned long long</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw(SettingTypeException)</highlight></codeline>
<codeline lineno="686"><highlight class="normal">{</highlight></codeline>
<codeline lineno="687" refid="classlibconfig_1_1_setting_1a79a41bbda6c9cd9f50c5820032424874" refkind="member"><highlight class="normal"><sp/><sp/>assertType(<ref refid="classlibconfig_1_1_setting_1a42f760ff88654e784477a6f040267bb4a7be3a00b9ee4aff3c3f2a0685cc419fc" kindref="member">TypeInt64</ref>);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>v<sp/>=<sp/><ref refid="libconfig_8c_1a7844f2e4563e56bcd4fd6da10d6f2f9b" kindref="member">config_setting_get_int64</ref>(_setting);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v<sp/>&lt;<sp/><ref refid="wincompat_8h_1acbdb3b9706ee520058919b5da54fb615" kindref="member">INT64_CONST</ref>(0))</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="wincompat_8h_1acbdb3b9706ee520058919b5da54fb615" kindref="member">INT64_CONST</ref>(0);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(static_cast&lt;unsigned<sp/>long<sp/>long&gt;(v));</highlight></codeline>
<codeline lineno="695"><highlight class="normal">}</highlight></codeline>
<codeline lineno="696" refid="classlibconfig_1_1_setting_1afe1936d947131f08bc0b0e0824ada07a" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><ref refid="classlibconfig_1_1_setting_1a79a41bbda6c9cd9f50c5820032424874" kindref="member">Setting::operator double</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw(SettingTypeException)</highlight></codeline>
<codeline lineno="700"><highlight class="normal">{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/>assertType(<ref refid="classlibconfig_1_1_setting_1a42f760ff88654e784477a6f040267bb4a5cc25d9b40d35e5d4bb914b7a65825f0" kindref="member">TypeFloat</ref>);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="libconfig_8c_1adcb0009a496728a8bd729241e98109ea" kindref="member">config_setting_get_float</ref>(_setting));</highlight></codeline>
<codeline lineno="704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706" refid="classlibconfig_1_1_setting_1aaec2d0eca01cca2974dcf32c7246d80f" refkind="member"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><ref refid="classlibconfig_1_1_setting_1afe1936d947131f08bc0b0e0824ada07a" kindref="member">Setting::operator float</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw(SettingTypeException)</highlight></codeline>
<codeline lineno="709"><highlight class="normal">{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/>assertType(<ref refid="classlibconfig_1_1_setting_1a42f760ff88654e784477a6f040267bb4a5cc25d9b40d35e5d4bb914b7a65825f0" kindref="member">TypeFloat</ref>);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>may<sp/>cause<sp/>loss<sp/>of<sp/>precision:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(static_cast&lt;float&gt;(<ref refid="libconfig_8c_1adcb0009a496728a8bd729241e98109ea" kindref="member">config_setting_get_float</ref>(_setting)));</highlight></codeline>
<codeline lineno="714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="715" refid="classlibconfig_1_1_setting_1aec0236d3c1a6d3626b0e46c84dd6fee7" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><ref refid="classlibconfig_1_1_setting_1aaec2d0eca01cca2974dcf32c7246d80f" kindref="member">Setting::operator const char *</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw(SettingTypeException)</highlight></codeline>
<codeline lineno="719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>assertType(<ref refid="classlibconfig_1_1_setting_1a42f760ff88654e784477a6f040267bb4a2f4e6ed26f2abbecd870eaf6374fada4" kindref="member">TypeString</ref>);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="libconfig_8c_1af689931f9bca3784ab8741e66105a194" kindref="member">config_setting_get_string</ref>(_setting));</highlight></codeline>
<codeline lineno="723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal">Setting::operator<sp/>std::string()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw(SettingTypeException)</highlight></codeline>
<codeline lineno="728"><highlight class="normal">{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>assertType(<ref refid="classlibconfig_1_1_setting_1a42f760ff88654e784477a6f040267bb4a2f4e6ed26f2abbecd870eaf6374fada4" kindref="member">TypeString</ref>);</highlight></codeline>
<codeline lineno="730" refid="classlibconfig_1_1_setting_1aaa35268d7f5b451a3fd853a41e4ce60a" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/><ref refid="libconfig_8c_1af689931f9bca3784ab8741e66105a194" kindref="member">config_setting_get_string</ref>(_setting);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/>std::string<sp/>str;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s)</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(str);</highlight></codeline>
<codeline lineno="738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741" refid="classlibconfig_1_1_setting_1ad466b44815dfe9ae2177765d2242911a" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><ref refid="classlibconfig_1_1_setting" kindref="compound">Setting</ref><sp/>&amp;<sp/>Setting::operator=(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(SettingTypeException)</highlight></codeline>
<codeline lineno="743"><highlight class="normal">{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/>assertType(TypeBoolean);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><ref refid="libconfig_8c_1a154c93131ed0ed7f7ad95febb5f70083" kindref="member">config_setting_set_bool</ref>(_setting,<sp/>value);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752" refid="classlibconfig_1_1_setting_1a4caadef35e5cee2d9a8f659c31786a65" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><ref refid="classlibconfig_1_1_setting" kindref="compound">Setting</ref><sp/>&amp;<sp/>Setting::operator=(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(SettingTypeException)</highlight></codeline>
<codeline lineno="754"><highlight class="normal">{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/>assertType(TypeInt);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><ref refid="libconfig_8c_1a8a0e383a8f058ead09fa60bb1ae021e3" kindref="member">config_setting_set_int</ref>(_setting,<sp/>value);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="760"><highlight class="normal">}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762" refid="classlibconfig_1_1_setting_1a25baf662804c2847b00d9e1f7ca5cde5" refkind="member"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><ref refid="classlibconfig_1_1_setting" kindref="compound">Setting</ref><sp/>&amp;<sp/>Setting::operator=(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>value)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(SettingTypeException)</highlight></codeline>
<codeline lineno="765"><highlight class="normal">{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">=(static_cast&lt;long<sp/>long&gt;(value)));</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">=(static_cast&lt;int&gt;(value)));</highlight></codeline>
<codeline lineno="770"><highlight class="normal">}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774" refid="classlibconfig_1_1_setting_1a7488663acd784d99bc0c9b2daac9a941" refkind="member"><highlight class="normal"><ref refid="classlibconfig_1_1_setting" kindref="compound">Setting</ref><sp/>&amp;<sp/>Setting::operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;value)</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(SettingTypeException)</highlight></codeline>
<codeline lineno="776"><highlight class="normal">{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/>assertType(TypeInt64);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><ref refid="libconfig_8c_1abaa4ff3934618a3d7075cf9c449aa963" kindref="member">config_setting_set_int64</ref>(_setting,<sp/>value);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="782"><highlight class="normal">}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785" refid="classlibconfig_1_1_setting_1af15ab13df839c6a45231a1af1eda8163" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><ref refid="classlibconfig_1_1_setting" kindref="compound">Setting</ref><sp/>&amp;<sp/>Setting::operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;value)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(SettingTypeException)</highlight></codeline>
<codeline lineno="787"><highlight class="normal">{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/>assertType(TypeFloat);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><ref refid="libconfig_8c_1ae8dc9f7bb4e46c9bafebf51984885cba" kindref="member">config_setting_set_float</ref>(_setting,<sp/>value);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="793"><highlight class="normal">}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><ref refid="classlibconfig_1_1_setting" kindref="compound">Setting</ref><sp/>&amp;<sp/>Setting::operator=(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(SettingTypeException)</highlight></codeline>
<codeline lineno="798" refid="classlibconfig_1_1_setting_1a74867e0937b039a73e1ee58e2b6e25c8" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/>assertType(TypeFloat);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cvalue<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(value);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><ref refid="libconfig_8c_1ae8dc9f7bb4e46c9bafebf51984885cba" kindref="member">config_setting_set_float</ref>(_setting,<sp/>cvalue);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809" refid="classlibconfig_1_1_setting_1af7ed1af6a57ef12c20ef91c441642a34" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><ref refid="classlibconfig_1_1_setting" kindref="compound">Setting</ref><sp/>&amp;<sp/>Setting::operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(SettingTypeException)</highlight></codeline>
<codeline lineno="811"><highlight class="normal">{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/>assertType(TypeString);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><ref refid="libconfig_8c_1a6a5a5b13254c02de72eaa464ad2d4fd3" kindref="member">config_setting_set_string</ref>(_setting,<sp/>value);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="817"><highlight class="normal">}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821" refid="classlibconfig_1_1_setting_1a389df94c075e8330e4630193e4d2d47b" refkind="member"><highlight class="normal"><ref refid="classlibconfig_1_1_setting" kindref="compound">Setting</ref><sp/>&amp;<sp/>Setting::operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;value)</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(SettingTypeException)</highlight></codeline>
<codeline lineno="823"><highlight class="normal">{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/>assertType(TypeString);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><ref refid="libconfig_8c_1a6a5a5b13254c02de72eaa464ad2d4fd3" kindref="member">config_setting_set_string</ref>(_setting,<sp/>value.c_str());</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="829"><highlight class="normal">}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><ref refid="classlibconfig_1_1_setting" kindref="compound">Setting</ref><sp/>&amp;<sp/><ref refid="classlibconfig_1_1_setting_1a21d11b7fb846888e0aee832e081b622d" kindref="member">Setting::operator[]</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(SettingTypeException,<sp/><ref refid="classlibconfig_1_1_setting_not_found_exception" kindref="compound">SettingNotFoundException</ref>)</highlight></codeline>
<codeline lineno="835"><highlight class="normal">{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((_type<sp/>!=<sp/>TypeArray)<sp/>&amp;&amp;<sp/>(_type<sp/>!=<sp/>TypeGroup)<sp/>&amp;&amp;<sp/>(_type<sp/>!=<sp/>TypeList))</highlight></codeline>
<codeline lineno="837" refid="classlibconfig_1_1_setting_1a21d11b7fb846888e0aee832e081b622d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>SettingTypeException(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><ref refid="structconfig__setting__t" kindref="compound">config_setting_t</ref><sp/>*setting<sp/>=<sp/><ref refid="libconfig_8c_1a17345add7433c058e3d5580d4ae4905b" kindref="member">config_setting_get_elem</ref>(_setting,<sp/>i);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<sp/>setting)</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_not_found_exception" kindref="compound">SettingNotFoundException</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(wrapSetting(setting));</highlight></codeline>
<codeline lineno="845"><highlight class="normal">}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><ref refid="classlibconfig_1_1_setting" kindref="compound">Setting</ref><sp/>&amp;<sp/><ref refid="classlibconfig_1_1_setting_1a21d11b7fb846888e0aee832e081b622d" kindref="member">Setting::operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(SettingTypeException,<sp/><ref refid="classlibconfig_1_1_setting_not_found_exception" kindref="compound">SettingNotFoundException</ref>)</highlight></codeline>
<codeline lineno="851"><highlight class="normal">{</highlight></codeline>
<codeline lineno="852" refid="libconfigcpp_8c_09_09_1abfd54db12d50ab5a5811407b035c743b" refkind="member"><highlight class="normal"><sp/><sp/>assertType(TypeGroup);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><ref refid="structconfig__setting__t" kindref="compound">config_setting_t</ref><sp/>*setting<sp/>=<sp/><ref refid="libconfig_8c_1ac49409f325b9cd30915be9583636e2b9" kindref="member">config_setting_get_member</ref>(_setting,<sp/>key);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<sp/>setting)</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>SettingNotFoundException(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(wrapSetting(setting));</highlight></codeline>
<codeline lineno="860"><highlight class="normal">}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SETTING_LOOKUP_NO_EXCEPTIONS(K,<sp/>T,<sp/>V)<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="865"><highlight class="preprocessor"><sp/><sp/>try<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="866" refid="classlibconfig_1_1_setting_1a0e4e4c4663d9a783bf4474bad8a50035" refkind="member"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="867"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Setting<sp/>&amp;s<sp/>=<sp/>operator[](K);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="868"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>V<sp/>=<sp/>(T)s;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="869"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return(true);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="870"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="871"><highlight class="preprocessor"><sp/><sp/>catch(ConfigException)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="872"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="873" refid="classlibconfig_1_1_setting_1a9a6031fce4d16a7932723df19f1bfe49" refkind="member"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return(false);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="874"><highlight class="preprocessor"><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1a0e4e4c4663d9a783bf4474bad8a50035" kindref="member">Setting::lookupValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="879"><highlight class="normal">{</highlight></codeline>
<codeline lineno="880" refid="classlibconfig_1_1_setting_1a8d04a467743202188746488d06556b59" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="libconfigcpp_8c_09_09_1abfd54db12d50ab5a5811407b035c743b" kindref="member">SETTING_LOOKUP_NO_EXCEPTIONS</ref>(name,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="881"><highlight class="normal">}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1a0e4e4c4663d9a783bf4474bad8a50035" kindref="member">Setting::lookupValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="886"><highlight class="normal">{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><ref refid="libconfigcpp_8c_09_09_1abfd54db12d50ab5a5811407b035c743b" kindref="member">SETTING_LOOKUP_NO_EXCEPTIONS</ref>(name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="888" refid="classlibconfig_1_1_setting_1ac5cb1a509267aabba8ed01416b8ffeea" refkind="member"><highlight class="normal">}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1a0e4e4c4663d9a783bf4474bad8a50035" kindref="member">Setting::lookupValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;value)</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="894"><highlight class="normal">{</highlight></codeline>
<codeline lineno="895" refid="classlibconfig_1_1_setting_1a7c3373fa2e0a0a42e1df4cf481b1bfb9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="libconfigcpp_8c_09_09_1abfd54db12d50ab5a5811407b035c743b" kindref="member">SETTING_LOOKUP_NO_EXCEPTIONS</ref>(name,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="896"><highlight class="normal">}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1a0e4e4c4663d9a783bf4474bad8a50035" kindref="member">Setting::lookupValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="901"><highlight class="normal">{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><ref refid="libconfigcpp_8c_09_09_1abfd54db12d50ab5a5811407b035c743b" kindref="member">SETTING_LOOKUP_NO_EXCEPTIONS</ref>(name,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="903" refid="classlibconfig_1_1_setting_1ab4f52a99ffeb1653963fb5b18924e3a0" refkind="member"><highlight class="normal">}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1a0e4e4c4663d9a783bf4474bad8a50035" kindref="member">Setting::lookupValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;value)</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="909"><highlight class="normal">{</highlight></codeline>
<codeline lineno="910" refid="classlibconfig_1_1_setting_1aedb49259520a78bc3157592c98dcef7a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="libconfigcpp_8c_09_09_1abfd54db12d50ab5a5811407b035c743b" kindref="member">SETTING_LOOKUP_NO_EXCEPTIONS</ref>(name,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="911"><highlight class="normal">}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1a0e4e4c4663d9a783bf4474bad8a50035" kindref="member">Setting::lookupValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="916"><highlight class="normal">{</highlight></codeline>
<codeline lineno="917" refid="classlibconfig_1_1_setting_1a57859386ad6801ae51eb704fd611c432" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="libconfigcpp_8c_09_09_1abfd54db12d50ab5a5811407b035c743b" kindref="member">SETTING_LOOKUP_NO_EXCEPTIONS</ref>(name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1a0e4e4c4663d9a783bf4474bad8a50035" kindref="member">Setting::lookupValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="923"><highlight class="normal">{</highlight></codeline>
<codeline lineno="924" refid="classlibconfig_1_1_setting_1ab8ace851b657bbb0231c888ecc8addbd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="libconfigcpp_8c_09_09_1abfd54db12d50ab5a5811407b035c743b" kindref="member">SETTING_LOOKUP_NO_EXCEPTIONS</ref>(name,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1a0e4e4c4663d9a783bf4474bad8a50035" kindref="member">Setting::lookupValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*&amp;value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="930"><highlight class="normal">{</highlight></codeline>
<codeline lineno="931" refid="classlibconfig_1_1_setting_1a1f5a2e3b389c28c18f8e0b21948480f5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="libconfigcpp_8c_09_09_1abfd54db12d50ab5a5811407b035c743b" kindref="member">SETTING_LOOKUP_NO_EXCEPTIONS</ref>(name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>value);</highlight></codeline>
<codeline lineno="932"><highlight class="normal">}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1a0e4e4c4663d9a783bf4474bad8a50035" kindref="member">Setting::lookupValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/>std::string<sp/>&amp;value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="937"><highlight class="normal">{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><ref refid="libconfigcpp_8c_09_09_1abfd54db12d50ab5a5811407b035c743b" kindref="member">SETTING_LOOKUP_NO_EXCEPTIONS</ref>(name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>value);</highlight></codeline>
<codeline lineno="939"><highlight class="normal">}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943" refid="classlibconfig_1_1_setting_1a150d10fa07afab2e5e65ac5fa1c40f40" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1a1bf8273fc34c8d965b4c110815c5dda3" kindref="member">Setting::exists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="944"><highlight class="normal">{</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_type<sp/>!=<sp/>TypeGroup)</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><ref refid="structconfig__setting__t" kindref="compound">config_setting_t</ref><sp/>*setting<sp/>=<sp/><ref refid="libconfig_8c_1ac49409f325b9cd30915be9583636e2b9" kindref="member">config_setting_get_member</ref>(_setting,<sp/>name);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950" refid="classlibconfig_1_1_setting_1a2b5310a3a8b784c76f2d838b3861527c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(setting<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="951"><highlight class="normal">}</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1a150d10fa07afab2e5e65ac5fa1c40f40" kindref="member">Setting::getLength</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw()</highlight></codeline>
<codeline lineno="956"><highlight class="normal">{</highlight></codeline>
<codeline lineno="957" refid="classlibconfig_1_1_setting_1a7646f4ee12327170117a35fc248beff8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="libconfig_8c_1a09bb6054f27159b3841e305cefd9abec" kindref="member">config_setting_length</ref>(_setting));</highlight></codeline>
<codeline lineno="958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlibconfig_1_1_setting_1a2b5310a3a8b784c76f2d838b3861527c" kindref="member">Setting::getName</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw()</highlight></codeline>
<codeline lineno="963"><highlight class="normal">{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="libconfig_8h_1a33946abef044004eff9748953dc87bd5" kindref="member">config_setting_name</ref>(_setting));</highlight></codeline>
<codeline lineno="965"><highlight class="normal">}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968" refid="classlibconfig_1_1_setting_1a5dbfe99711fd915483fd318695a6b42c" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal">std::string<sp/><ref refid="classlibconfig_1_1_setting_1a7646f4ee12327170117a35fc248beff8" kindref="member">Setting::getPath</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="970"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>path;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/>__constructPath(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(path.str());</highlight></codeline>
<codeline lineno="976"><highlight class="normal">}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980" refid="classlibconfig_1_1_setting_1afe7957eeaed5e8f20cb6d08edfda3aac" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting" kindref="compound">Setting</ref><sp/>&amp;<sp/><ref refid="classlibconfig_1_1_setting_1a5dbfe99711fd915483fd318695a6b42c" kindref="member">Setting::getParent</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw(<ref refid="classlibconfig_1_1_setting_not_found_exception" kindref="compound">SettingNotFoundException</ref>)</highlight></codeline>
<codeline lineno="981"><highlight class="normal">{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><ref refid="structconfig__setting__t" kindref="compound">config_setting_t</ref><sp/>*setting<sp/>=<sp/><ref refid="libconfig_8h_1a37db62547e2cd519228bb73a13d82ccf" kindref="member">config_setting_parent</ref>(_setting);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<sp/>setting)</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>SettingNotFoundException(NULL);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(wrapSetting(setting));</highlight></codeline>
<codeline lineno="988"><highlight class="normal">}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992" refid="classlibconfig_1_1_setting_1af789d129c32aa5119afb13a43cbad3c0" refkind="member"><highlight class="normal"><ref refid="classlibconfig_1_1_setting" kindref="compound">Setting</ref><sp/>&amp;<sp/><ref refid="classlibconfig_1_1_setting_1a5dbfe99711fd915483fd318695a6b42c" kindref="member">Setting::getParent</ref>()<sp/>throw(<ref refid="classlibconfig_1_1_setting_not_found_exception" kindref="compound">SettingNotFoundException</ref>)</highlight></codeline>
<codeline lineno="993"><highlight class="normal">{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><ref refid="structconfig__setting__t" kindref="compound">config_setting_t</ref><sp/>*setting<sp/>=<sp/><ref refid="libconfig_8h_1a37db62547e2cd519228bb73a13d82ccf" kindref="member">config_setting_parent</ref>(_setting);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<sp/>setting)</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>SettingNotFoundException(NULL);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999" refid="classlibconfig_1_1_setting_1ad7dee0de27baf79df645ef0fa499f2f7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(wrapSetting(setting));</highlight></codeline>
<codeline lineno="1000"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1af789d129c32aa5119afb13a43cbad3c0" kindref="member">Setting::getSourceLine</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw()</highlight></codeline>
<codeline lineno="1005"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1006" refid="classlibconfig_1_1_setting_1a6e73e9387d36975436418b8a509f979d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="libconfig_8h_1a86c0b3a1867132a5d4fccbc0a28d79e6" kindref="member">config_setting_source_line</ref>(_setting));</highlight></codeline>
<codeline lineno="1007"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classlibconfig_1_1_setting_1ad7dee0de27baf79df645ef0fa499f2f7" kindref="member">Setting::getSourceFile</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw()</highlight></codeline>
<codeline lineno="1012"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1013" refid="classlibconfig_1_1_setting_1a80146d2ef242ec06fb4766b375c0cd1c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="libconfig_8h_1aebe8c512b8f474d66f73bd5adcbdb5b3" kindref="member">config_setting_source_file</ref>(_setting));</highlight></codeline>
<codeline lineno="1014"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1a6e73e9387d36975436418b8a509f979d" kindref="member">Setting::isRoot</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw()</highlight></codeline>
<codeline lineno="1019"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1020" refid="classlibconfig_1_1_setting_1a52f173e9d7abd9d3e8e0ba4151ed89d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="libconfig_8h_1a14fa8c4e642664c5908d6f222f2614b8" kindref="member">config_setting_is_root</ref>(_setting));</highlight></codeline>
<codeline lineno="1021"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1a80146d2ef242ec06fb4766b375c0cd1c" kindref="member">Setting::getIndex</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw()</highlight></codeline>
<codeline lineno="1026"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="libconfig_8c_1a485aaa3d59f8db576897510b3224637e" kindref="member">config_setting_index</ref>(_setting));</highlight></codeline>
<codeline lineno="1028"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031" refid="classlibconfig_1_1_setting_1abc80ebd07bbca2cc65b37b74a452104a" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1a52f173e9d7abd9d3e8e0ba4151ed89d1" kindref="member">Setting::remove</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(SettingTypeException,<sp/>SettingNotFoundException)</highlight></codeline>
<codeline lineno="1034"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/>assertType(TypeGroup);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<sp/><ref refid="libconfig_8c_1a325cf5713305d042849f55e65cc955d3" kindref="member">config_setting_remove</ref>(_setting,<sp/>name))</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>SettingNotFoundException(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043" refid="classlibconfig_1_1_setting_1a3b3ad21872906e8533c711cfc73b50dd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_1a52f173e9d7abd9d3e8e0ba4151ed89d1" kindref="member">Setting::remove</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(SettingTypeException,<sp/>SettingNotFoundException)</highlight></codeline>
<codeline lineno="1045"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((_type<sp/>!=<sp/>TypeArray)<sp/>&amp;&amp;<sp/>(_type<sp/>!=<sp/>TypeGroup)<sp/>&amp;&amp;<sp/>(_type<sp/>!=<sp/>TypeList))</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>SettingTypeException(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>idx);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<sp/><ref refid="libconfig_8c_1a570ff5c5e53d8dbe8b848ffc4bef83b3" kindref="member">config_setting_remove_elem</ref>(_setting,<sp/>idx))</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>SettingNotFoundException(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>idx);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><ref refid="classlibconfig_1_1_setting" kindref="compound">Setting</ref><sp/>&amp;<sp/><ref refid="classlibconfig_1_1_setting_1ae1860aa1886a488b33da41da33f334f5" kindref="member">Setting::add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/><ref refid="classlibconfig_1_1_setting_1a42f760ff88654e784477a6f040267bb4" kindref="member">Setting::Type</ref><sp/>type)</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(<ref refid="classlibconfig_1_1_setting_name_exception" kindref="compound">SettingNameException</ref>,<sp/>SettingTypeException)</highlight></codeline>
<codeline lineno="1057"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/>assertType(TypeGroup);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>typecode<sp/>=<sp/>__toTypeCode(type);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(typecode<sp/>==<sp/><ref refid="libconfig_8h_1ab339b4487df7c8e85a40c4755b3db1ae" kindref="member">CONFIG_TYPE_NONE</ref>)</highlight></codeline>
<codeline lineno="1063" refid="classlibconfig_1_1_setting_1a32fdd08f5b3d856f7d706867fa8d7074" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>SettingTypeException(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><ref refid="structconfig__setting__t" kindref="compound">config_setting_t</ref><sp/>*setting<sp/>=<sp/><ref refid="libconfig_8c_1af6b5f1049d3c527210b34c0274ffe360" kindref="member">config_setting_add</ref>(_setting,<sp/>name,<sp/>typecode);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<sp/>setting)</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlibconfig_1_1_setting_name_exception" kindref="compound">SettingNameException</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(wrapSetting(setting));</highlight></codeline>
<codeline lineno="1071"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><ref refid="classlibconfig_1_1_setting" kindref="compound">Setting</ref><sp/>&amp;<sp/><ref refid="classlibconfig_1_1_setting_1ae1860aa1886a488b33da41da33f334f5" kindref="member">Setting::add</ref>(<ref refid="classlibconfig_1_1_setting_1a42f760ff88654e784477a6f040267bb4" kindref="member">Setting::Type</ref><sp/>type)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(SettingTypeException)</highlight></codeline>
<codeline lineno="1076"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((_type<sp/>!=<sp/>TypeArray)<sp/>&amp;&amp;<sp/>(_type<sp/>!=<sp/>TypeList))</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>SettingTypeException(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_type<sp/>==<sp/>TypeArray)</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>getLength();</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(idx<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibconfig_1_1_setting_1a42f760ff88654e784477a6f040267bb4" kindref="member">Setting::Type</ref><sp/>atype<sp/>=<sp/>operator[](0).getType();</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type<sp/>!=<sp/>atype)</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>SettingTypeException(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>idx);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((type<sp/>!=<sp/>TypeInt)<sp/>&amp;&amp;<sp/>(type<sp/>!=<sp/>TypeInt64)<sp/>&amp;&amp;<sp/>(type<sp/>!=<sp/>TypeFloat)</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(type<sp/>!=<sp/>TypeString)<sp/>&amp;&amp;<sp/>(type<sp/>!=<sp/>TypeBoolean))</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>SettingTypeException(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>idx);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>typecode<sp/>=<sp/>__toTypeCode(type);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><ref refid="structconfig__setting__t" kindref="compound">config_setting_t</ref><sp/>*s<sp/>=<sp/><ref refid="libconfig_8c_1af6b5f1049d3c527210b34c0274ffe360" kindref="member">config_setting_add</ref>(_setting,<sp/>NULL,<sp/>typecode);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/>Setting<sp/>&amp;ns<sp/>=<sp/>wrapSetting(s);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(type)</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TypeInt:</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ns<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TypeInt64:</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ns<sp/>=<sp/><ref refid="wincompat_8h_1acbdb3b9706ee520058919b5da54fb615" kindref="member">INT64_CONST</ref>(0);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TypeFloat:</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ns<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TypeString:</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ns<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)NULL;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TypeBoolean:</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ns<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>won&apos;t<sp/>happen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ns);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Setting::assertType(<ref refid="classlibconfig_1_1_setting_1a42f760ff88654e784477a6f040267bb4" kindref="member">Setting::Type</ref><sp/>type)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(SettingTypeException)</highlight></codeline>
<codeline lineno="1136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type<sp/>!=<sp/>_type)</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(isNumber()<sp/>&amp;&amp;<sp/><ref refid="libconfig_8c_1a1bddad7478d8e5a86d264de580c051c9" kindref="member">config_get_auto_convert</ref>(_setting-&gt;config)</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((type<sp/>==<sp/>TypeInt)<sp/>||<sp/>(type<sp/>==<sp/>TypeInt64)<sp/>||<sp/>(type<sp/>==<sp/>TypeFloat))))</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>SettingTypeException(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal">Setting<sp/>&amp;<sp/>Setting::wrapSetting(<ref refid="structconfig__setting__t" kindref="compound">config_setting_t</ref><sp/>*s)</highlight></codeline>
<codeline lineno="1148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/>Setting<sp/>*setting<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*hook<sp/>=<sp/><ref refid="libconfig_8h_1a6bd290dffec67eb7b0b35442b6901979" kindref="member">config_setting_get_hook</ref>(s);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<sp/>hook)</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/>setting<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Setting(s);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libconfig_8c_1ac37d5bf35294b74285a7386e2a213930" kindref="member">config_setting_set_hook</ref>(s,<sp/>reinterpret_cast&lt;void<sp/>*&gt;(setting));</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/>setting<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">Setting<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(hook);</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(*setting);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>libconfig</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight><highlight class="comment">//<sp/>eof</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/horst/repos/opentld-sdyx/src/3rdparty/libconfig/libconfigcpp.c++"/>
  </compounddef>
</doxygen>
