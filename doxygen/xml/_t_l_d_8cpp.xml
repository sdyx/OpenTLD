<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.1">
  <compounddef id="_t_l_d_8cpp" kind="file">
    <compoundname>TLD.cpp</compoundname>
    <includes refid="_t_l_d_8h" local="yes">TLD.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="_n_n_classifier_8h" local="yes">NNClassifier.h</includes>
    <includes refid="_t_l_d_util_8h" local="yes">TLDUtil.h</includes>
    <incdepgraph>
      <node id="1686">
        <label>DetectorCascade.h</label>
        <link refid="_detector_cascade_8h"/>
        <childnode refid="1687" relation="include">
        </childnode>
        <childnode refid="1689" relation="include">
        </childnode>
        <childnode refid="1690" relation="include">
        </childnode>
        <childnode refid="1692" relation="include">
        </childnode>
        <childnode refid="1693" relation="include">
        </childnode>
        <childnode refid="1694" relation="include">
        </childnode>
      </node>
      <node id="1692">
        <label>EnsembleClassifier.h</label>
        <link refid="_ensemble_classifier_8h"/>
        <childnode refid="1684" relation="include">
        </childnode>
      </node>
      <node id="1694">
        <label>NNClassifier.h</label>
        <link refid="_n_n_classifier_8h"/>
        <childnode refid="1688" relation="include">
        </childnode>
        <childnode refid="1684" relation="include">
        </childnode>
        <childnode refid="1695" relation="include">
        </childnode>
        <childnode refid="1687" relation="include">
        </childnode>
      </node>
      <node id="1690">
        <label>VarianceFilter.h</label>
        <link refid="_variance_filter_8h"/>
        <childnode refid="1684" relation="include">
        </childnode>
        <childnode refid="1691" relation="include">
        </childnode>
        <childnode refid="1687" relation="include">
        </childnode>
      </node>
      <node id="1695">
        <label>NormalizedPatch.h</label>
        <link refid="_normalized_patch_8h"/>
      </node>
      <node id="1698">
        <label>TLDUtil.h</label>
        <link refid="_t_l_d_util_8h"/>
        <childnode refid="1699" relation="include">
        </childnode>
        <childnode refid="1684" relation="include">
        </childnode>
      </node>
      <node id="1691">
        <label>IntegralImage.h</label>
        <link refid="_integral_image_8h"/>
        <childnode refid="1684" relation="include">
        </childnode>
      </node>
      <node id="1693">
        <label>Clustering.h</label>
        <link refid="_clustering_8h"/>
        <childnode refid="1688" relation="include">
        </childnode>
        <childnode refid="1684" relation="include">
        </childnode>
        <childnode refid="1687" relation="include">
        </childnode>
      </node>
      <node id="1689">
        <label>ForegroundDetector.h</label>
        <link refid="_foreground_detector_8h"/>
        <childnode refid="1688" relation="include">
        </childnode>
        <childnode refid="1684" relation="include">
        </childnode>
        <childnode refid="1687" relation="include">
        </childnode>
      </node>
      <node id="1688">
        <label>vector</label>
      </node>
      <node id="1699">
        <label>utility</label>
      </node>
      <node id="1682">
        <label>src/libopentld/tld/TLD.cpp</label>
        <link refid="TLD.cpp"/>
        <childnode refid="1683" relation="include">
        </childnode>
        <childnode refid="1696" relation="include">
        </childnode>
        <childnode refid="1697" relation="include">
        </childnode>
        <childnode refid="1694" relation="include">
        </childnode>
        <childnode refid="1698" relation="include">
        </childnode>
      </node>
      <node id="1684">
        <label>cv.h</label>
      </node>
      <node id="1696">
        <label>iostream</label>
      </node>
      <node id="1683">
        <label>TLD.h</label>
        <link refid="_t_l_d_8h"/>
        <childnode refid="1684" relation="include">
        </childnode>
        <childnode refid="1685" relation="include">
        </childnode>
        <childnode refid="1686" relation="include">
        </childnode>
      </node>
      <node id="1685">
        <label>MedianFlowTracker.h</label>
        <link refid="_median_flow_tracker_8h"/>
        <childnode refid="1684" relation="include">
        </childnode>
      </node>
      <node id="1687">
        <label>DetectionResult.h</label>
        <link refid="_detection_result_8h"/>
        <childnode refid="1688" relation="include">
        </childnode>
        <childnode refid="1684" relation="include">
        </childnode>
      </node>
      <node id="1697">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structtld_1_1_tld_export_entry" prot="public">tld::TldExportEntry</innerclass>
    <innernamespace refid="namespacetld">tld</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/><sp/>Copyright<sp/>2011<sp/>AIT<sp/>Austrian<sp/>Institute<sp/>of<sp/>Technology</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>OpenTLD.</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/><sp/><sp/>OpenTLD<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/><sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/><sp/><sp/>OpenTLD<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/><sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/><sp/><sp/>along<sp/>with<sp/>OpenTLD.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>TLD.cpp</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Nov<sp/>17,<sp/>2011</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>Georg<sp/>Nebehay</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_t_l_d_8h" kindref="compound">TLD.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_n_n_classifier_8h" kindref="compound">NNClassifier.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_t_l_d_util_8h" kindref="compound">TLDUtil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">cv;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tld</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classtld_1_1_t_l_d_1a7dd24a107de7e84f9b0459c3bfa078aa" refkind="member"><highlight class="normal">TLD::TLD()</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1ab94fab1f55f6ef122c9e3fcf4747ac50" kindref="member">trackerEnabled</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a925a0be8c0b83bcb8c2c91a046c7db1b" kindref="member">detectorEnabled</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a86422799478881dd711d0a78444be245" kindref="member">learningEnabled</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a873bb61492173098b134d94239ef0ba4" kindref="member">alternating</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a2a238338a62dac450b2759f99d5ae304" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a26e0c624178eb37a57cd0146efa6d262" kindref="member">wasValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a0f108af012bc9b7d004bed33cf8e4d90" kindref="member">learning</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a5af4bc9d8fa64c4423b294f727c4ba55" kindref="member">currBB</ref><sp/>=<sp/><ref refid="classtld_1_1_t_l_d_1adc7a217f04d600daffe8d025f424677f" kindref="member">prevBB</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classtld_1_1_detector_cascade" kindref="compound">DetectorCascade</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a98a1be08a4b630d85e5e60dc4bb78b13" kindref="member">nnClassifier</ref><sp/>=<sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;<ref refid="classtld_1_1_detector_cascade_1abc9da459b6d66e5a2f2658f52b4dfdc6" kindref="member">nnClassifier</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a8b523afaefa5fbd9bc86fd656b87e1c0" kindref="member">medianFlowTracker</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classtld_1_1_median_flow_tracker" kindref="compound">MedianFlowTracker</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classtld_1_1_t_l_d_1a0bd3497a3d97108b74a107ead3b716f5" refkind="member"><highlight class="normal"><ref refid="classtld_1_1_t_l_d_1a0bd3497a3d97108b74a107ead3b716f5" kindref="member">TLD::~TLD</ref>()</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>storeCurrentData();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classtld_1_1_t_l_d_1a8b523afaefa5fbd9bc86fd656b87e1c0" kindref="member">medianFlowTracker</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classtld_1_1_t_l_d_1a42636c4a6fef7de9b71af987151a7f9e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtld_1_1_t_l_d_1a42636c4a6fef7de9b71af987151a7f9e" kindref="member">TLD::release</ref>()</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;<ref refid="classtld_1_1_detector_cascade_1a4658f60cc03595d55920b4949ff26a69" kindref="member">release</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a8b523afaefa5fbd9bc86fd656b87e1c0" kindref="member">medianFlowTracker</ref>-&gt;<ref refid="classtld_1_1_median_flow_tracker_1ad5c1599acad1607c20c7d2ca8aacf56c" kindref="member">cleanPreviousData</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classtld_1_1_t_l_d_1a5af4bc9d8fa64c4423b294f727c4ba55" kindref="member">currBB</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TLD::storeCurrentData()</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a7b402ff7a0260f00b8d3dbcea5c87efa" kindref="member">prevImg</ref>.release();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a7b402ff7a0260f00b8d3dbcea5c87efa" kindref="member">prevImg</ref><sp/>=<sp/><ref refid="classtld_1_1_t_l_d_1a7bb2c3271567719afb2f97e5953c31d5" kindref="member">currImg</ref>;<sp/></highlight><highlight class="comment">//Store<sp/>old<sp/>image<sp/>(if<sp/>any)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classtld_1_1_t_l_d_1adc7a217f04d600daffe8d025f424677f" kindref="member">prevBB</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1adc7a217f04d600daffe8d025f424677f" kindref="member">prevBB</ref><sp/>=<sp/><ref refid="classtld_1_1_t_l_d_1a5af4bc9d8fa64c4423b294f727c4ba55" kindref="member">currBB</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Store<sp/>old<sp/>bounding<sp/>box<sp/>(if<sp/>any)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;<ref refid="classtld_1_1_detector_cascade_1a56b148b63e2c592624c90bc7f7f50d68" kindref="member">cleanPreviousData</ref>();<sp/></highlight><highlight class="comment">//Reset<sp/>detector<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a8b523afaefa5fbd9bc86fd656b87e1c0" kindref="member">medianFlowTracker</ref>-&gt;<ref refid="classtld_1_1_median_flow_tracker_1ad5c1599acad1607c20c7d2ca8aacf56c" kindref="member">cleanPreviousData</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a26e0c624178eb37a57cd0146efa6d262" kindref="member">wasValid</ref><sp/>=<sp/><ref refid="classtld_1_1_t_l_d_1a2a238338a62dac450b2759f99d5ae304" kindref="member">valid</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtld_1_1_t_l_d_1a6a1b9edb0ae0f79d4447c2ff7ab983be" kindref="member">TLD::selectObject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mat<sp/>&amp;img,<sp/>Rect<sp/>*bb)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Delete<sp/>old<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;release();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;objWidth<sp/>=<sp/>bb-&gt;width;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;objHeight<sp/>=<sp/>bb-&gt;height;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Init<sp/>detector<sp/>cascade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;init();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a7bb2c3271567719afb2f97e5953c31d5" kindref="member">currImg</ref><sp/>=<sp/>img;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a5af4bc9d8fa64c4423b294f727c4ba55" kindref="member">currBB</ref><sp/>=<sp/><ref refid="namespacetld_1a05ea18fc911b12873acd2211f83689f7" kindref="member">tldCopyRect</ref>(bb);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1ab2e815db72cb2f40a7864c4d4457eb34" kindref="member">currConf</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a2a238338a62dac450b2759f99d5ae304" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>initialLearning();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtld_1_1_t_l_d_1a8161e09603dc40c43d314cfec9e0746b" kindref="member">TLD::processImage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mat<sp/>&amp;img)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>storeCurrentData();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>Mat<sp/>grey_frame;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>cvtColor(img,<sp/>grey_frame,<sp/>CV_RGB2GRAY);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a7bb2c3271567719afb2f97e5953c31d5" kindref="member">currImg</ref><sp/>=<sp/>grey_frame;<sp/></highlight><highlight class="comment">//<sp/>Store<sp/>new<sp/>image<sp/>,<sp/>right<sp/>after<sp/>storeCurrentData();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classtld_1_1_t_l_d_1ab94fab1f55f6ef122c9e3fcf4747ac50" kindref="member">trackerEnabled</ref>)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a8b523afaefa5fbd9bc86fd656b87e1c0" kindref="member">medianFlowTracker</ref>-&gt;track(<ref refid="classtld_1_1_t_l_d_1a7b402ff7a0260f00b8d3dbcea5c87efa" kindref="member">prevImg</ref>,<sp/><ref refid="classtld_1_1_t_l_d_1a7bb2c3271567719afb2f97e5953c31d5" kindref="member">currImg</ref>,<sp/><ref refid="classtld_1_1_t_l_d_1adc7a217f04d600daffe8d025f424677f" kindref="member">prevBB</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classtld_1_1_t_l_d_1a925a0be8c0b83bcb8c2c91a046c7db1b" kindref="member">detectorEnabled</ref><sp/>&amp;&amp;<sp/>(!<ref refid="classtld_1_1_t_l_d_1a873bb61492173098b134d94239ef0ba4" kindref="member">alternating</ref><sp/>||<sp/><ref refid="classtld_1_1_t_l_d_1a8b523afaefa5fbd9bc86fd656b87e1c0" kindref="member">medianFlowTracker</ref>-&gt;trackerBB<sp/>==<sp/><ref refid="_config_8cpp_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;detect(grey_frame);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>fuseHypotheses();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>learn();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TLD::fuseHypotheses()</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>Rect<sp/>*trackerBB<sp/>=<sp/><ref refid="classtld_1_1_t_l_d_1a8b523afaefa5fbd9bc86fd656b87e1c0" kindref="member">medianFlowTracker</ref>-&gt;trackerBB;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numClusters<sp/>=<sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;detectionResult-&gt;numClusters;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>Rect<sp/>*detectorBB<sp/>=<sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;detectionResult-&gt;detectorBB;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a5af4bc9d8fa64c4423b294f727c4ba55" kindref="member">currBB</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1ab2e815db72cb2f40a7864c4d4457eb34" kindref="member">currConf</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a2a238338a62dac450b2759f99d5ae304" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>confDetector<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(numClusters<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>confDetector<sp/>=<sp/><ref refid="classtld_1_1_t_l_d_1a98a1be08a4b630d85e5e60dc4bb78b13" kindref="member">nnClassifier</ref>-&gt;classifyBB(<ref refid="classtld_1_1_t_l_d_1a7bb2c3271567719afb2f97e5953c31d5" kindref="member">currImg</ref>,<sp/>detectorBB);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(trackerBB<sp/>!=<sp/><ref refid="_config_8cpp_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>confTracker<sp/>=<sp/><ref refid="classtld_1_1_t_l_d_1a98a1be08a4b630d85e5e60dc4bb78b13" kindref="member">nnClassifier</ref>-&gt;classifyBB(<ref refid="classtld_1_1_t_l_d_1a7bb2c3271567719afb2f97e5953c31d5" kindref="member">currImg</ref>,<sp/>trackerBB);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(numClusters<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>confDetector<sp/>&gt;<sp/>confTracker<sp/>&amp;&amp;<sp/><ref refid="namespacetld_1afe4210f75b17cb13bb95c8d4c08a543a" kindref="member">tldOverlapRectRect</ref>(*trackerBB,<sp/>*detectorBB)<sp/>&lt;<sp/>0.5)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a5af4bc9d8fa64c4423b294f727c4ba55" kindref="member">currBB</ref><sp/>=<sp/><ref refid="namespacetld_1a05ea18fc911b12873acd2211f83689f7" kindref="member">tldCopyRect</ref>(detectorBB);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1ab2e815db72cb2f40a7864c4d4457eb34" kindref="member">currConf</ref><sp/>=<sp/>confDetector;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a5af4bc9d8fa64c4423b294f727c4ba55" kindref="member">currBB</ref><sp/>=<sp/><ref refid="namespacetld_1a05ea18fc911b12873acd2211f83689f7" kindref="member">tldCopyRect</ref>(trackerBB);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1ab2e815db72cb2f40a7864c4d4457eb34" kindref="member">currConf</ref><sp/>=<sp/>confTracker;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(confTracker<sp/>&gt;<sp/><ref refid="classtld_1_1_t_l_d_1a98a1be08a4b630d85e5e60dc4bb78b13" kindref="member">nnClassifier</ref>-&gt;thetaTP)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a2a238338a62dac450b2759f99d5ae304" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classtld_1_1_t_l_d_1a26e0c624178eb37a57cd0146efa6d262" kindref="member">wasValid</ref><sp/>&amp;&amp;<sp/>confTracker<sp/>&gt;<sp/><ref refid="classtld_1_1_t_l_d_1a98a1be08a4b630d85e5e60dc4bb78b13" kindref="member">nnClassifier</ref>-&gt;thetaFP)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a2a238338a62dac450b2759f99d5ae304" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(numClusters<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a5af4bc9d8fa64c4423b294f727c4ba55" kindref="member">currBB</ref><sp/>=<sp/><ref refid="namespacetld_1a05ea18fc911b12873acd2211f83689f7" kindref="member">tldCopyRect</ref>(detectorBB);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1ab2e815db72cb2f40a7864c4d4457eb34" kindref="member">currConf</ref><sp/>=<sp/>confDetector;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/>float<sp/>var<sp/>=<sp/>CalculateVariance(patch.values,<sp/>nn-&gt;patch_size*nn-&gt;patch_size);</highlight></codeline>
<codeline lineno="178"><highlight class="comment"></highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/><sp/>if(var<sp/>&lt;<sp/>min_var)<sp/>{<sp/>//TODO:<sp/>Think<sp/>about<sp/>incorporating<sp/>this</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;%f,<sp/>%f:<sp/>Variance<sp/>too<sp/>low<sp/>\n&quot;,<sp/>var,<sp/>classifier-&gt;min_var);</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TLD::initialLearning()</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a0f108af012bc9b7d004bed33cf8e4d90" kindref="member">learning</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//This<sp/>is<sp/>just<sp/>for<sp/>display<sp/>purposes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>DetectionResult<sp/>*detectionResult<sp/>=<sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;detectionResult;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;detect(<ref refid="classtld_1_1_t_l_d_1a7bb2c3271567719afb2f97e5953c31d5" kindref="member">currImg</ref>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//This<sp/>is<sp/>the<sp/>positive<sp/>patch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>NormalizedPatch<sp/>patch;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetld_1a7bbab27cff309fae59b25b37268c22d4" kindref="member">tldExtractNormalizedPatchRect</ref>(<ref refid="classtld_1_1_t_l_d_1a7bb2c3271567719afb2f97e5953c31d5" kindref="member">currImg</ref>,<sp/><ref refid="classtld_1_1_t_l_d_1a5af4bc9d8fa64c4423b294f727c4ba55" kindref="member">currBB</ref>,<sp/>patch.values);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>patch.positive<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>initVar<sp/>=<sp/><ref refid="namespacetld_1a53d4a014fd3df2b3e8a3026a1c1768a7" kindref="member">tldCalcVariance</ref>(patch.values,<sp/><ref refid="_normalized_patch_8h_1af7b481162876c5821cbfe7cb11f3a7d0" kindref="member">TLD_PATCH_SIZE</ref><sp/>*<sp/><ref refid="_normalized_patch_8h_1af7b481162876c5821cbfe7cb11f3a7d0" kindref="member">TLD_PATCH_SIZE</ref>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;varianceFilter-&gt;minVar<sp/>=<sp/>initVar<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*overlap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[<ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;numWindows];</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetld_1ab71405a293095380c793589e8d59d4c7" kindref="member">tldOverlapRect</ref>(<ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;windows,<sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;numWindows,<sp/><ref refid="classtld_1_1_t_l_d_1a5af4bc9d8fa64c4423b294f727c4ba55" kindref="member">currBB</ref>,<sp/>overlap);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Add<sp/>all<sp/>bounding<sp/>boxes<sp/>with<sp/>high<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;<sp/>pair&lt;int,<sp/>float&gt;<sp/>&gt;<sp/>positiveIndices;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;int&gt;<sp/>negativeIndices;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//First:<sp/>Find<sp/>overlapping<sp/>positive<sp/>and<sp/>negative<sp/>patches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;numWindows;<sp/>i++)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(overlap[i]<sp/>&gt;<sp/>0.6)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>positiveIndices.push_back(pair&lt;int,<sp/>float&gt;(i,<sp/>overlap[i]));</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(overlap[i]<sp/>&lt;<sp/>0.2)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>variance<sp/>=<sp/>detectionResult-&gt;variances[i];</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;varianceFilter-&gt;enabled<sp/>||<sp/>variance<sp/>&gt;<sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;varianceFilter-&gt;minVar)<sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>This<sp/>check<sp/>is<sp/>unnecessary<sp/>if<sp/>minVar<sp/>would<sp/>be<sp/>set<sp/>before<sp/>calling<sp/>detect.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>negativeIndices.push_back(i);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>sort(positiveIndices.begin(),<sp/>positiveIndices.end(),<sp/>tldSortByOverlapDesc);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;NormalizedPatch&gt;<sp/>patches;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>patches.push_back(patch);<sp/></highlight><highlight class="comment">//Add<sp/>first<sp/>patch<sp/>to<sp/>patch<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numIterations<sp/>=<sp/>std::min&lt;size_t&gt;(positiveIndices.size(),<sp/>10);<sp/></highlight><highlight class="comment">//Take<sp/>at<sp/>most<sp/>10<sp/>bounding<sp/>boxes<sp/>(sorted<sp/>by<sp/>overlap)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numIterations;<sp/>i++)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>positiveIndices.at(i).first;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Learn<sp/>this<sp/>bounding<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>Somewhere<sp/>here<sp/>image<sp/>warping<sp/>might<sp/>be<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;ensembleClassifier-&gt;learn(&amp;<ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;windows[TLD_WINDOW_SIZE<sp/>*<sp/>idx],<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>&amp;detectionResult-&gt;featureVectors[<ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;numTrees<sp/>*<sp/>idx]);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>srand(1);<sp/></highlight><highlight class="comment">//TODO:<sp/>This<sp/>is<sp/>not<sp/>guaranteed<sp/>to<sp/>affect<sp/>random_shuffle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>random_shuffle(negativeIndices.begin(),<sp/>negativeIndices.end());</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Choose<sp/>100<sp/>random<sp/>patches<sp/>for<sp/>negative<sp/>examples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>std::min&lt;size_t&gt;(100,<sp/>negativeIndices.size());<sp/>i++)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>negativeIndices.at(i);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NormalizedPatch<sp/>patch;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetld_1adf30e26ca7073712ac0eae4a1f1136ba" kindref="member">tldExtractNormalizedPatchBB</ref>(<ref refid="classtld_1_1_t_l_d_1a7bb2c3271567719afb2f97e5953c31d5" kindref="member">currImg</ref>,<sp/>&amp;<ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;windows[TLD_WINDOW_SIZE<sp/>*<sp/>idx],<sp/>patch.values);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>patch.positive<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>patches.push_back(patch);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;nnClassifier-&gt;learn(patches);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>overlap;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">//Do<sp/>this<sp/>when<sp/>current<sp/>trajectory<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TLD::learn()</highlight></codeline>
<codeline lineno="270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classtld_1_1_t_l_d_1a86422799478881dd711d0a78444be245" kindref="member">learningEnabled</ref><sp/>||<sp/>!<ref refid="classtld_1_1_t_l_d_1a2a238338a62dac450b2759f99d5ae304" kindref="member">valid</ref><sp/>||<sp/>!<ref refid="classtld_1_1_t_l_d_1a925a0be8c0b83bcb8c2c91a046c7db1b" kindref="member">detectorEnabled</ref>)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a0f108af012bc9b7d004bed33cf8e4d90" kindref="member">learning</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a0f108af012bc9b7d004bed33cf8e4d90" kindref="member">learning</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>DetectionResult<sp/>*detectionResult<sp/>=<sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;detectionResult;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!detectionResult-&gt;containsValidData)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;detect(<ref refid="classtld_1_1_t_l_d_1a7bb2c3271567719afb2f97e5953c31d5" kindref="member">currImg</ref>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//This<sp/>is<sp/>the<sp/>positive<sp/>patch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>NormalizedPatch<sp/>patch;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetld_1a7bbab27cff309fae59b25b37268c22d4" kindref="member">tldExtractNormalizedPatchRect</ref>(<ref refid="classtld_1_1_t_l_d_1a7bb2c3271567719afb2f97e5953c31d5" kindref="member">currImg</ref>,<sp/><ref refid="classtld_1_1_t_l_d_1a5af4bc9d8fa64c4423b294f727c4ba55" kindref="member">currBB</ref>,<sp/>patch.values);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*overlap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[<ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;numWindows];</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetld_1ab71405a293095380c793589e8d59d4c7" kindref="member">tldOverlapRect</ref>(<ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;windows,<sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;numWindows,<sp/><ref refid="classtld_1_1_t_l_d_1a5af4bc9d8fa64c4423b294f727c4ba55" kindref="member">currBB</ref>,<sp/>overlap);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Add<sp/>all<sp/>bounding<sp/>boxes<sp/>with<sp/>high<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;pair&lt;int,<sp/>float&gt;<sp/>&gt;<sp/>positiveIndices;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;int&gt;<sp/>negativeIndices;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;int&gt;<sp/>negativeIndicesForNN;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//First:<sp/>Find<sp/>overlapping<sp/>positive<sp/>and<sp/>negative<sp/>patches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;numWindows;<sp/>i++)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(overlap[i]<sp/>&gt;<sp/>0.6)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>positiveIndices.push_back(pair&lt;int,<sp/>float&gt;(i,<sp/>overlap[i]));</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(overlap[i]<sp/>&lt;<sp/>0.2)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;ensembleClassifier-&gt;enabled<sp/>||<sp/>detectionResult-&gt;posteriors[i]<sp/>&gt;<sp/>0.1)<sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>Shouldn&apos;t<sp/>this<sp/>read<sp/>as<sp/>0.5?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>negativeIndices.push_back(i);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;ensembleClassifier-&gt;enabled<sp/>||<sp/>detectionResult-&gt;posteriors[i]<sp/>&gt;<sp/>0.5)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>negativeIndicesForNN.push_back(i);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>sort(positiveIndices.begin(),<sp/>positiveIndices.end(),<sp/>tldSortByOverlapDesc);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;NormalizedPatch&gt;<sp/>patches;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>patch.positive<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>patches.push_back(patch);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>Flip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numIterations<sp/>=<sp/>std::min&lt;size_t&gt;(positiveIndices.size(),<sp/>10);<sp/></highlight><highlight class="comment">//Take<sp/>at<sp/>most<sp/>10<sp/>bounding<sp/>boxes<sp/>(sorted<sp/>by<sp/>overlap)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>negativeIndices.size();<sp/>i++)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>negativeIndices.at(i);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>Somewhere<sp/>here<sp/>image<sp/>warping<sp/>might<sp/>be<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;ensembleClassifier-&gt;learn(&amp;<ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;windows[TLD_WINDOW_SIZE<sp/>*<sp/>idx],<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>&amp;detectionResult-&gt;featureVectors[<ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;numTrees<sp/>*<sp/>idx]);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>Randomization<sp/>might<sp/>be<sp/>a<sp/>good<sp/>idea</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numIterations;<sp/>i++)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>positiveIndices.at(i).first;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>Somewhere<sp/>here<sp/>image<sp/>warping<sp/>might<sp/>be<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;ensembleClassifier-&gt;learn(&amp;<ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;windows[TLD_WINDOW_SIZE<sp/>*<sp/>idx],<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>&amp;detectionResult-&gt;featureVectors[<ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;numTrees<sp/>*<sp/>idx]);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>negativeIndicesForNN.size();<sp/>i++)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>negativeIndicesForNN.at(i);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NormalizedPatch<sp/>patch;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetld_1adf30e26ca7073712ac0eae4a1f1136ba" kindref="member">tldExtractNormalizedPatchBB</ref>(<ref refid="classtld_1_1_t_l_d_1a7bb2c3271567719afb2f97e5953c31d5" kindref="member">currImg</ref>,<sp/>&amp;<ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;windows[TLD_WINDOW_SIZE<sp/>*<sp/>idx],<sp/>patch.values);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>patch.positive<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>patches.push_back(patch);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;nnClassifier-&gt;learn(patches);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;NN<sp/>has<sp/>now<sp/>&quot;<sp/>&lt;&lt;<sp/>detectorCascade-&gt;nnClassifier-&gt;truePositives-&gt;size()<sp/>&lt;&lt;<sp/>&quot;<sp/>positives<sp/>and<sp/>&quot;<sp/>&lt;&lt;<sp/>detectorCascade-&gt;nnClassifier-&gt;falsePositives-&gt;size()<sp/>&lt;&lt;<sp/>&quot;<sp/>negatives.\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>overlap;</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367" refid="structtld_1_1_tld_export_entry" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="369" refid="structtld_1_1_tld_export_entry_1a8b67c3367255beab5b728d8803c7cb78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index;</highlight></codeline>
<codeline lineno="370" refid="structtld_1_1_tld_export_entry_1aa7f1939c611aeff5ef09cebad2fdea79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>P;</highlight></codeline>
<codeline lineno="371" refid="structtld_1_1_tld_export_entry_1a22f1125d40eecedb725e0f15aa07b01e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N;</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}<sp/><ref refid="structtld_1_1_tld_export_entry" kindref="compound">TldExportEntry</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="classtld_1_1_t_l_d_1aef7e6414e0334f8d4325360bd4ea3048" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtld_1_1_t_l_d_1aef7e6414e0334f8d4325360bd4ea3048" kindref="member">TLD::writeToFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_n_n_classifier" kindref="compound">NNClassifier</ref><sp/>*nn<sp/>=<sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;<ref refid="classtld_1_1_detector_cascade_1abc9da459b6d66e5a2f2658f52b4dfdc6" kindref="member">nnClassifier</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_ensemble_classifier" kindref="compound">EnsembleClassifier</ref><sp/>*ec<sp/>=<sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;<ref refid="classtld_1_1_detector_cascade_1a818a0be0ff9f76fb42534a056761c163" kindref="member">ensembleClassifier</ref>;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*file<sp/>=<sp/>fopen(path,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(file,<sp/></highlight><highlight class="stringliteral">&quot;#Tld<sp/>ModelExport\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(file,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>#width\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;<ref refid="classtld_1_1_detector_cascade_1a1c7a7fddb085fca4577779110637c5c8" kindref="member">objWidth</ref>);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(file,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>#height\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;<ref refid="classtld_1_1_detector_cascade_1a1186ed695cf6e9f00d180ec92e4aa1ea" kindref="member">objHeight</ref>);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(file,<sp/></highlight><highlight class="stringliteral">&quot;%f<sp/>#min_var\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;<ref refid="classtld_1_1_detector_cascade_1a5d2600fc22f6cc39ef1940457324c5eb" kindref="member">varianceFilter</ref>-&gt;<ref refid="classtld_1_1_variance_filter_1ad5fd1b805c1cb461a31f61dd6fdb8f07" kindref="member">minVar</ref>);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(file,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>#Positive<sp/>Sample<sp/>Size\n&quot;</highlight><highlight class="normal">,<sp/>nn-&gt;<ref refid="classtld_1_1_n_n_classifier_1ac17849309a8aed1fdc3e3247f22b5fa2" kindref="member">truePositives</ref>-&gt;size());</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/>nn-&gt;<ref refid="classtld_1_1_n_n_classifier_1ac17849309a8aed1fdc3e3247f22b5fa2" kindref="member">truePositives</ref>-&gt;size();<sp/>s++)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*imageData<sp/>=<sp/>nn-&gt;<ref refid="classtld_1_1_n_n_classifier_1ac17849309a8aed1fdc3e3247f22b5fa2" kindref="member">truePositives</ref>-&gt;at(s).values;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>TLD_PATCH_SIZE;<sp/>i++)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>TLD_PATCH_SIZE;<sp/>j++)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(file,<sp/></highlight><highlight class="stringliteral">&quot;%f<sp/>&quot;</highlight><highlight class="normal">,<sp/>imageData[i<sp/>*<sp/>TLD_PATCH_SIZE<sp/>+<sp/>j]);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(file,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(file,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>#Negative<sp/>Sample<sp/>Size\n&quot;</highlight><highlight class="normal">,<sp/>nn-&gt;<ref refid="classtld_1_1_n_n_classifier_1abc088471e8f9e259cc07cbb9a704fb28" kindref="member">falsePositives</ref>-&gt;size());</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/>nn-&gt;<ref refid="classtld_1_1_n_n_classifier_1abc088471e8f9e259cc07cbb9a704fb28" kindref="member">falsePositives</ref>-&gt;size();<sp/>s++)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*imageData<sp/>=<sp/>nn-&gt;<ref refid="classtld_1_1_n_n_classifier_1abc088471e8f9e259cc07cbb9a704fb28" kindref="member">falsePositives</ref>-&gt;at(s).values;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>TLD_PATCH_SIZE;<sp/>i++)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>TLD_PATCH_SIZE;<sp/>j++)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(file,<sp/></highlight><highlight class="stringliteral">&quot;%f<sp/>&quot;</highlight><highlight class="normal">,<sp/>imageData[i<sp/>*<sp/>TLD_PATCH_SIZE<sp/>+<sp/>j]);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(file,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(file,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>#numtrees\n&quot;</highlight><highlight class="normal">,<sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1a60e802769e79c833d1484d96bb345b7c" kindref="member">numTrees</ref>);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;<ref refid="classtld_1_1_detector_cascade_1a2d41ea56f304562878151ae09c34aa8f" kindref="member">numTrees</ref><sp/>=<sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1a60e802769e79c833d1484d96bb345b7c" kindref="member">numTrees</ref>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(file,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>#numFeatures\n&quot;</highlight><highlight class="normal">,<sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1a176aba4e90f0b9373d8aedd7c25fa262" kindref="member">numFeatures</ref>);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;<ref refid="classtld_1_1_detector_cascade_1a63af0a8c55ac292b25f2f72b6e734280" kindref="member">numFeatures</ref><sp/>=<sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1a176aba4e90f0b9373d8aedd7c25fa262" kindref="member">numFeatures</ref>;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1a60e802769e79c833d1484d96bb345b7c" kindref="member">numTrees</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(file,<sp/></highlight><highlight class="stringliteral">&quot;#Tree<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1a176aba4e90f0b9373d8aedd7c25fa262" kindref="member">numFeatures</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*features<sp/>=<sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1a02deffee640b4106051024d1ae8a55aa" kindref="member">features</ref><sp/>+<sp/>4<sp/>*<sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1a176aba4e90f0b9373d8aedd7c25fa262" kindref="member">numFeatures</ref><sp/>*<sp/>i<sp/>+<sp/>4<sp/>*<sp/>j;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(file,<sp/></highlight><highlight class="stringliteral">&quot;%f<sp/>%f<sp/>%f<sp/>%f<sp/>#<sp/>Feature<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>features[0],<sp/>features[1],<sp/>features[2],<sp/>features[3],<sp/>j);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Collect<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;TldExportEntry&gt;<sp/>list;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>pow(2.0f,<sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1a176aba4e90f0b9373d8aedd7c25fa262" kindref="member">numFeatures</ref>);<sp/>index++)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1a572549e31f9bfc34c7b464e02aa41397" kindref="member">positives</ref>[i<sp/>*<sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1afbfbda1b693525895467fba88a8debe3" kindref="member">numIndices</ref><sp/>+<sp/>index];</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtld_1_1_tld_export_entry" kindref="compound">TldExportEntry</ref><sp/>entry;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry.<ref refid="structtld_1_1_tld_export_entry_1a8b67c3367255beab5b728d8803c7cb78" kindref="member">index</ref><sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry.<ref refid="structtld_1_1_tld_export_entry_1aa7f1939c611aeff5ef09cebad2fdea79" kindref="member">P</ref><sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry.<ref refid="structtld_1_1_tld_export_entry_1a22f1125d40eecedb725e0f15aa07b01e" kindref="member">N</ref><sp/>=<sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1a2de7561eb20a0f0a1b4909d6dfd89d0b" kindref="member">negatives</ref>[i<sp/>*<sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1afbfbda1b693525895467fba88a8debe3" kindref="member">numIndices</ref><sp/>+<sp/>index];</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list.push_back(entry);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(file,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>#numLeaves\n&quot;</highlight><highlight class="normal">,<sp/>list.size());</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>list.size();<sp/>j++)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtld_1_1_tld_export_entry" kindref="compound">TldExportEntry</ref><sp/>entry<sp/>=<sp/>list.at(j);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(file,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>entry.<ref refid="structtld_1_1_tld_export_entry_1a8b67c3367255beab5b728d8803c7cb78" kindref="member">index</ref>,<sp/>entry.<ref refid="structtld_1_1_tld_export_entry_1aa7f1939c611aeff5ef09cebad2fdea79" kindref="member">P</ref>,<sp/>entry.<ref refid="structtld_1_1_tld_export_entry_1a22f1125d40eecedb725e0f15aa07b01e" kindref="member">N</ref>);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="classtld_1_1_t_l_d_1a8474094a32dc39751bac54f8998860c5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtld_1_1_t_l_d_1a8474094a32dc39751bac54f8998860c5" kindref="member">TLD::readFromFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)</highlight></codeline>
<codeline lineno="466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1a42636c4a6fef7de9b71af987151a7f9e" kindref="member">release</ref>();</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_n_n_classifier" kindref="compound">NNClassifier</ref><sp/>*nn<sp/>=<sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;<ref refid="classtld_1_1_detector_cascade_1abc9da459b6d66e5a2f2658f52b4dfdc6" kindref="member">nnClassifier</ref>;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_ensemble_classifier" kindref="compound">EnsembleClassifier</ref><sp/>*ec<sp/>=<sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;<ref refid="classtld_1_1_detector_cascade_1a818a0be0ff9f76fb42534a056761c163" kindref="member">ensembleClassifier</ref>;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*file<sp/>=<sp/>fopen(path,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(file<sp/>==<sp/><ref refid="_config_8cpp_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Model<sp/>not<sp/>found:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAX_LEN<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str_buf[255];</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>fgets(str_buf,<sp/>MAX_LEN,<sp/>file);<sp/></highlight><highlight class="comment">/*Skip<sp/>line*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>fscanf(file,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;<ref refid="classtld_1_1_detector_cascade_1a1c7a7fddb085fca4577779110637c5c8" kindref="member">objWidth</ref>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>fgets(str_buf,<sp/>MAX_LEN,<sp/>file);<sp/></highlight><highlight class="comment">/*Skip<sp/>rest<sp/>of<sp/>line*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>fscanf(file,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;<ref refid="classtld_1_1_detector_cascade_1a1186ed695cf6e9f00d180ec92e4aa1ea" kindref="member">objHeight</ref>);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>fgets(str_buf,<sp/>MAX_LEN,<sp/>file);<sp/></highlight><highlight class="comment">/*Skip<sp/>rest<sp/>of<sp/>line*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>fscanf(file,<sp/></highlight><highlight class="stringliteral">&quot;%f<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;<ref refid="classtld_1_1_detector_cascade_1a5d2600fc22f6cc39ef1940457324c5eb" kindref="member">varianceFilter</ref>-&gt;<ref refid="classtld_1_1_variance_filter_1ad5fd1b805c1cb461a31f61dd6fdb8f07" kindref="member">minVar</ref>);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>fgets(str_buf,<sp/>MAX_LEN,<sp/>file);<sp/></highlight><highlight class="comment">/*Skip<sp/>rest<sp/>of<sp/>line*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPositivePatches;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>fscanf(file,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>&amp;numPositivePatches);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>fgets(str_buf,<sp/>MAX_LEN,<sp/>file);<sp/></highlight><highlight class="comment">/*Skip<sp/>line*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/>numPositivePatches;<sp/>s++)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_normalized_patch" kindref="compound">NormalizedPatch</ref><sp/>patch;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>15;<sp/>i++)<sp/><sp/><sp/></highlight><highlight class="comment">//Do<sp/>15<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fgets(str_buf,<sp/>MAX_LEN,<sp/>file);<sp/></highlight><highlight class="comment">/*Read<sp/>sample*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pch;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pch<sp/>=<sp/>strtok(str_buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(pch<sp/>!=<sp/><ref refid="_config_8cpp_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>atof(pch);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>patch.<ref refid="classtld_1_1_normalized_patch_1ae76afafa7dd50901d7c468b92d1c1df5" kindref="member">values</ref>[i<sp/>*<sp/><ref refid="_normalized_patch_8h_1af7b481162876c5821cbfe7cb11f3a7d0" kindref="member">TLD_PATCH_SIZE</ref><sp/>+<sp/>j]<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pch<sp/>=<sp/>strtok(<ref refid="_config_8cpp_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn-&gt;<ref refid="classtld_1_1_n_n_classifier_1ac17849309a8aed1fdc3e3247f22b5fa2" kindref="member">truePositives</ref>-&gt;push_back(patch);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numNegativePatches;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>fscanf(file,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>&amp;numNegativePatches);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>fgets(str_buf,<sp/>MAX_LEN,<sp/>file);<sp/></highlight><highlight class="comment">/*Skip<sp/>line*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/>numNegativePatches;<sp/>s++)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_normalized_patch" kindref="compound">NormalizedPatch</ref><sp/>patch;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>15;<sp/>i++)<sp/><sp/><sp/></highlight><highlight class="comment">//Do<sp/>15<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fgets(str_buf,<sp/>MAX_LEN,<sp/>file);<sp/></highlight><highlight class="comment">/*Read<sp/>sample*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pch;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pch<sp/>=<sp/>strtok(str_buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(pch<sp/>!=<sp/><ref refid="_config_8cpp_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>atof(pch);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>patch.<ref refid="classtld_1_1_normalized_patch_1ae76afafa7dd50901d7c468b92d1c1df5" kindref="member">values</ref>[i<sp/>*<sp/><ref refid="_normalized_patch_8h_1af7b481162876c5821cbfe7cb11f3a7d0" kindref="member">TLD_PATCH_SIZE</ref><sp/>+<sp/>j]<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pch<sp/>=<sp/>strtok(<ref refid="_config_8cpp_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn-&gt;<ref refid="classtld_1_1_n_n_classifier_1abc088471e8f9e259cc07cbb9a704fb28" kindref="member">falsePositives</ref>-&gt;push_back(patch);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>fscanf(file,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>&amp;ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1a60e802769e79c833d1484d96bb345b7c" kindref="member">numTrees</ref>);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;<ref refid="classtld_1_1_detector_cascade_1a2d41ea56f304562878151ae09c34aa8f" kindref="member">numTrees</ref><sp/>=<sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1a60e802769e79c833d1484d96bb345b7c" kindref="member">numTrees</ref>;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>fgets(str_buf,<sp/>MAX_LEN,<sp/>file);<sp/></highlight><highlight class="comment">/*Skip<sp/>rest<sp/>of<sp/>line*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>fscanf(file,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>&amp;ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1a176aba4e90f0b9373d8aedd7c25fa262" kindref="member">numFeatures</ref>);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;<ref refid="classtld_1_1_detector_cascade_1a63af0a8c55ac292b25f2f72b6e734280" kindref="member">numFeatures</ref><sp/>=<sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1a176aba4e90f0b9373d8aedd7c25fa262" kindref="member">numFeatures</ref>;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>fgets(str_buf,<sp/>MAX_LEN,<sp/>file);<sp/></highlight><highlight class="comment">/*Skip<sp/>rest<sp/>of<sp/>line*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>2<sp/>*<sp/>2<sp/>*<sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1a176aba4e90f0b9373d8aedd7c25fa262" kindref="member">numFeatures</ref><sp/>*<sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1a60e802769e79c833d1484d96bb345b7c" kindref="member">numTrees</ref>;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1a02deffee640b4106051024d1ae8a55aa" kindref="member">features</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[size];</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1afbfbda1b693525895467fba88a8debe3" kindref="member">numIndices</ref><sp/>=<sp/>pow(2.0f,<sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1a176aba4e90f0b9373d8aedd7c25fa262" kindref="member">numFeatures</ref>);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1ab342db231d14bbaa892b2664d210e152" kindref="member">initPosteriors</ref>();</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1a60e802769e79c833d1484d96bb345b7c" kindref="member">numTrees</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fgets(str_buf,<sp/>MAX_LEN,<sp/>file);<sp/></highlight><highlight class="comment">/*Skip<sp/>line*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1a176aba4e90f0b9373d8aedd7c25fa262" kindref="member">numFeatures</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*features<sp/>=<sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1a02deffee640b4106051024d1ae8a55aa" kindref="member">features</ref><sp/>+<sp/>4<sp/>*<sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1a176aba4e90f0b9373d8aedd7c25fa262" kindref="member">numFeatures</ref><sp/>*<sp/>i<sp/>+<sp/>4<sp/>*<sp/>j;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fscanf(file,<sp/></highlight><highlight class="stringliteral">&quot;%f<sp/>%f<sp/>%f<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>&amp;features[0],<sp/>&amp;features[1],<sp/>&amp;features[2],<sp/>&amp;features[3]);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fgets(str_buf,<sp/>MAX_LEN,<sp/>file);<sp/></highlight><highlight class="comment">/*Skip<sp/>rest<sp/>of<sp/>line*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>number<sp/>of<sp/>leaves*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numLeaves;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fscanf(file,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>&amp;numLeaves);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fgets(str_buf,<sp/>MAX_LEN,<sp/>file);<sp/></highlight><highlight class="comment">/*Skip<sp/>rest<sp/>of<sp/>line*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>numLeaves;<sp/>j++)</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtld_1_1_tld_export_entry" kindref="compound">TldExportEntry</ref><sp/>entry;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fscanf(file,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d<sp/>%d<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>&amp;entry.<ref refid="structtld_1_1_tld_export_entry_1a8b67c3367255beab5b728d8803c7cb78" kindref="member">index</ref>,<sp/>&amp;entry.<ref refid="structtld_1_1_tld_export_entry_1aa7f1939c611aeff5ef09cebad2fdea79" kindref="member">P</ref>,<sp/>&amp;entry.<ref refid="structtld_1_1_tld_export_entry_1a22f1125d40eecedb725e0f15aa07b01e" kindref="member">N</ref>);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1acfc0c9d71c16dfed9750b6aa409afb0c" kindref="member">updatePosterior</ref>(i,<sp/>entry.<ref refid="structtld_1_1_tld_export_entry_1a8b67c3367255beab5b728d8803c7cb78" kindref="member">index</ref>,<sp/>1,<sp/>entry.<ref refid="structtld_1_1_tld_export_entry_1aa7f1939c611aeff5ef09cebad2fdea79" kindref="member">P</ref>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1acfc0c9d71c16dfed9750b6aa409afb0c" kindref="member">updatePosterior</ref>(i,<sp/>entry.<ref refid="structtld_1_1_tld_export_entry_1a8b67c3367255beab5b728d8803c7cb78" kindref="member">index</ref>,<sp/>0,<sp/>entry.<ref refid="structtld_1_1_tld_export_entry_1a22f1125d40eecedb725e0f15aa07b01e" kindref="member">N</ref>);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;<ref refid="classtld_1_1_detector_cascade_1a0515043558291c0bfbd5d403315c0334" kindref="member">initWindowsAndScales</ref>();</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;<ref refid="classtld_1_1_detector_cascade_1a39760d6c54ddb41785ffd05a7b881d8d" kindref="member">initWindowOffsets</ref>();</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;<ref refid="classtld_1_1_detector_cascade_1a809e13a6c7fbc1c13dcb9b4bf9d22964" kindref="member">propagateMembers</ref>();</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtld_1_1_t_l_d_1abe59bf99d46b55f6ef402cb48f9d290b" kindref="member">detectorCascade</ref>-&gt;<ref refid="classtld_1_1_detector_cascade_1a4a61cd265a92bce6f8f148db532a1789" kindref="member">initialised</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>ec-&gt;<ref refid="classtld_1_1_ensemble_classifier_1a92ddef7701b1062b1f4a53e5cfcd79a2" kindref="member">initFeatureOffsets</ref>();</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FB:<sp/>close<sp/>the<sp/>file<sp/>to<sp/>avoid<sp/>leakage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(<sp/>file<sp/>);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>tld<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/horst/repos/opentld-sdyx/src/libopentld/tld/TLD.cpp"/>
  </compounddef>
</doxygen>
